(set-logic ALL)
(define-fun load-word8 ((m (Array (_ BitVec 64) (_ BitVec 8))) (p (_ BitVec 64)))
	(_ BitVec 8)
	(select m p)
)


(define-fun load-word16 ((m (Array (_ BitVec 64) (_ BitVec 8))) (p (_ BitVec 64)))
	(_ BitVec 16)
	(concat (select m (bvadd p #x0000000000000001))
		(select m p)
	)
)


(define-fun load-word32 ((m (Array (_ BitVec 64) (_ BitVec 8))) (p (_ BitVec 64)))
	(_ BitVec 32)
	(concat
		(concat (select m (bvadd p #x0000000000000003))
				(select m (bvadd p #x0000000000000002)))
		(concat (select m (bvadd p #x0000000000000001))
				(select m p))
	)
)


(define-fun load-word64 ((m (Array (_ BitVec 64) (_ BitVec 8))) (p (_ BitVec 64)))
	(_ BitVec 64)
	(concat (load-word32 m (bvadd p #x0000000000000004))
			(load-word32 m p)
	)
)


(define-fun store-word8 ((m (Array (_ BitVec 64) (_ BitVec 8))) (p (_ BitVec 64)) (v (_ BitVec 8)))
	(Array (_ BitVec 64) (_ BitVec 8))
	(store m p v)
)


(define-fun store-word16 ((m (Array (_ BitVec 64) (_ BitVec 8))) (p (_ BitVec 64)) (v (_ BitVec 16)))
	(Array (_ BitVec 64) (_ BitVec 8))
	(store-word8
		(store-word8 m p ((_ extract 7 0) v))
		(bvadd p #x0000000000000001)
		((_ extract 15 8) v)
	)
)


(define-fun store-word32 ((m (Array (_ BitVec 64) (_ BitVec 8))) (p (_ BitVec 64)) (v (_ BitVec 32)))
	(Array (_ BitVec 64) (_ BitVec 8))
	(store-word16
		(store-word16 m p ((_ extract 15 0) v))
		(bvadd p #x0000000000000002)
		((_ extract 31 16) v)
	)
)


(define-fun store-word64 ((m (Array (_ BitVec 64) (_ BitVec 8))) (p (_ BitVec 64)) (v (_ BitVec 64)))
	(Array (_ BitVec 64) (_ BitVec 8))
	(store-word32
		(store-word32 m p ((_ extract 31 0) v))
		(bvadd p #x0000000000000004)
		((_ extract 63 32) v)
	)
)
(declare-sort PMS 0)
(declare-fun node_Err_ok () Bool)
(declare-fun node_Ret_ok () Bool)
(declare-fun node_97_ok () Bool)
(declare-fun node_stash_initial_args_ok () Bool)
(declare-fun node_pre_condition_ok () Bool)
(declare-fun node_upd_n97_ok () Bool)
(declare-fun node_86_ok () Bool)
(declare-fun node_upd_n86_ok () Bool)
(declare-fun node_guard_n85_ok () Bool)
(declare-fun node_85_ok () Bool)
(declare-fun node_guard_n84_ok () Bool)
(declare-fun node_call_stash_84_pred_1_ok () Bool)
(declare-fun node_call_pre_84_pred_1_ok () Bool)
(declare-fun node_84_ok () Bool)
(declare-fun node_call_post_84_ok () Bool)
(declare-fun node_upd_n84_ok () Bool)
(declare-fun node_guard_n83_ok () Bool)
(declare-fun node_83_ok () Bool)
(declare-fun node_upd_n83_ok () Bool)
(declare-fun node_guard_n82_ok () Bool)
(declare-fun node_82_ok () Bool)
(declare-fun node_upd_n82_ok () Bool)
(declare-fun node_guard_n81_ok () Bool)
(declare-fun node_81_ok () Bool)
(declare-fun node_j1_ok () Bool)
(declare-fun node_guard_n80_ok () Bool)
(declare-fun node_80_ok () Bool)
(declare-fun node_guard_n79_ok () Bool)
(declare-fun node_call_stash_79_pred_1_ok () Bool)
(declare-fun node_call_pre_79_pred_1_ok () Bool)
(declare-fun node_79_ok () Bool)
(declare-fun node_call_post_79_ok () Bool)
(declare-fun node_upd_n79_ok () Bool)
(declare-fun node_guard_n78_ok () Bool)
(declare-fun node_78_ok () Bool)
(declare-fun node_upd_n78_ok () Bool)
(declare-fun node_guard_n77_ok () Bool)
(declare-fun node_77_ok () Bool)
(declare-fun node_upd_n77_ok () Bool)
(declare-fun node_j2_ok () Bool)
(declare-fun node_guard_n76_ok () Bool)
(declare-fun node_76_ok () Bool)
(declare-fun node_j3_ok () Bool)
(declare-fun node_guard_n75_ok () Bool)
(declare-fun node_75_ok () Bool)
(declare-fun node_guard_n74_ok () Bool)
(declare-fun node_call_stash_74_pred_1_ok () Bool)
(declare-fun node_call_pre_74_pred_1_ok () Bool)
(declare-fun node_74_ok () Bool)
(declare-fun node_call_post_74_ok () Bool)
(declare-fun node_upd_n74_ok () Bool)
(declare-fun node_guard_n73_ok () Bool)
(declare-fun node_73_ok () Bool)
(declare-fun node_upd_n73_ok () Bool)
(declare-fun node_guard_n72_ok () Bool)
(declare-fun node_72_ok () Bool)
(declare-fun node_upd_n72_ok () Bool)
(declare-fun node_j4_ok () Bool)
(declare-fun node_guard_n71_ok () Bool)
(declare-fun node_71_ok () Bool)
(declare-fun node_j5_ok () Bool)
(declare-fun node_guard_n70_ok () Bool)
(declare-fun node_70_ok () Bool)
(declare-fun node_guard_n69_ok () Bool)
(declare-fun node_call_stash_69_pred_1_ok () Bool)
(declare-fun node_call_pre_69_pred_1_ok () Bool)
(declare-fun node_69_ok () Bool)
(declare-fun node_call_post_69_ok () Bool)
(declare-fun node_upd_n69_ok () Bool)
(declare-fun node_guard_n68_ok () Bool)
(declare-fun node_68_ok () Bool)
(declare-fun node_upd_n68_ok () Bool)
(declare-fun node_guard_n67_ok () Bool)
(declare-fun node_67_ok () Bool)
(declare-fun node_upd_n67_ok () Bool)
(declare-fun node_j6_ok () Bool)
(declare-fun node_22_ok () Bool)
(declare-fun node_loop_20_latch_1_ok () Bool)
(declare-fun node_20_ok () Bool)
(declare-fun node_loop_20_inv_asm_2_ok () Bool)
(declare-fun node_loop_20_inv_asm_1_ok () Bool)
(declare-fun node_guard_n21_ok () Bool)
(declare-fun node_21_ok () Bool)
(declare-fun node_guard_n18_ok () Bool)
(declare-fun node_18_ok () Bool)
(declare-fun node_guard_n17_ok () Bool)
(declare-fun node_call_stash_17_pred_1_ok () Bool)
(declare-fun node_call_pre_17_pred_1_ok () Bool)
(declare-fun node_17_ok () Bool)
(declare-fun node_call_post_17_ok () Bool)
(declare-fun node_upd_n17_ok () Bool)
(declare-fun node_guard_n16_ok () Bool)
(declare-fun node_16_ok () Bool)
(declare-fun node_upd_n16_ok () Bool)
(declare-fun node_guard_n15_ok () Bool)
(declare-fun node_15_ok () Bool)
(declare-fun node_guard_n14_ok () Bool)
(declare-fun node_14_ok () Bool)
(declare-fun node_guard_n13_ok () Bool)
(declare-fun node_13_ok () Bool)
(declare-fun node_upd_n13_ok () Bool)
(declare-fun node_guard_n12_ok () Bool)
(declare-fun node_12_ok () Bool)
(declare-fun node_guard_n11_ok () Bool)
(declare-fun node_11_ok () Bool)
(declare-fun node_upd_n11_ok () Bool)
(declare-fun node_guard_n10_ok () Bool)
(declare-fun node_10_ok () Bool)
(declare-fun node_guard_n9_ok () Bool)
(declare-fun node_9_ok () Bool)
(declare-fun node_j7_ok () Bool)
(declare-fun node_guard_n8_ok () Bool)
(declare-fun node_call_stash_8_pred_1_ok () Bool)
(declare-fun node_call_pre_8_pred_1_ok () Bool)
(declare-fun node_8_ok () Bool)
(declare-fun node_call_post_8_ok () Bool)
(declare-fun node_upd_n8_ok () Bool)
(declare-fun node_j8_ok () Bool)
(declare-fun node_guard_n7_ok () Bool)
(declare-fun node_7_ok () Bool)
(declare-fun node_upd_n7_ok () Bool)
(declare-fun node_guard_n6_ok () Bool)
(declare-fun node_6_ok () Bool)
(declare-fun node_j9_ok () Bool)
(declare-fun node_guard_n5_ok () Bool)
(declare-fun node_5_ok () Bool)
(declare-fun node_guard_n4_ok () Bool)
(declare-fun node_4_ok () Bool)
(declare-fun node_upd_n4_ok () Bool)
(declare-fun node_j10_ok () Bool)
(declare-fun node_guard_n3_ok () Bool)
(declare-fun node_3_ok () Bool)
(declare-fun node_j11_ok () Bool)
(declare-fun node_guard_n2_ok () Bool)
(declare-fun node_call_stash_2_pred_1_ok () Bool)
(declare-fun node_call_pre_2_pred_1_ok () Bool)
(declare-fun node_2_ok () Bool)
(declare-fun node_call_post_2_ok () Bool)
(declare-fun node_upd_n2_ok () Bool)
(declare-fun node_j12_ok () Bool)
(declare-fun node_1_ok () Bool)
(declare-fun node_post_condition_ok () Bool)
(declare-fun node_guard_n66_ok () Bool)
(declare-fun node_66_ok () Bool)
(declare-fun node_guard_n65_ok () Bool)
(declare-fun node_call_stash_65_pred_1_ok () Bool)
(declare-fun node_call_pre_65_pred_1_ok () Bool)
(declare-fun node_65_ok () Bool)
(declare-fun node_call_post_65_ok () Bool)
(declare-fun node_upd_n65_ok () Bool)
(declare-fun node_guard_n64_ok () Bool)
(declare-fun node_64_ok () Bool)
(declare-fun node_upd_n64_ok () Bool)
(declare-fun node_guard_n63_ok () Bool)
(declare-fun node_63_ok () Bool)
(declare-fun node_guard_n62_ok () Bool)
(declare-fun node_call_stash_62_pred_1_ok () Bool)
(declare-fun node_call_pre_62_pred_1_ok () Bool)
(declare-fun node_62_ok () Bool)
(declare-fun node_call_post_62_ok () Bool)
(declare-fun node_upd_n62_ok () Bool)
(declare-fun node_guard_n61_ok () Bool)
(declare-fun node_61_ok () Bool)
(declare-fun node_upd_n61_ok () Bool)
(declare-fun node_guard_n60_ok () Bool)
(declare-fun node_60_ok () Bool)
(declare-fun node_guard_n59_ok () Bool)
(declare-fun node_59_ok () Bool)
(declare-fun node_j13_ok () Bool)
(declare-fun node_58_ok () Bool)
(declare-fun node_upd_n58_ok () Bool)
(declare-fun node_guard_n57_ok () Bool)
(declare-fun node_57_ok () Bool)
(declare-fun node_guard_n56_ok () Bool)
(declare-fun node_56_ok () Bool)
(declare-fun node_upd_n56_ok () Bool)
(declare-fun node_j14_ok () Bool)
(declare-fun node_guard_n55_ok () Bool)
(declare-fun node_55_ok () Bool)
(declare-fun node_guard_n54_ok () Bool)
(declare-fun node_54_ok () Bool)
(declare-fun node_j15_ok () Bool)
(declare-fun node_53_ok () Bool)
(declare-fun node_upd_n53_ok () Bool)
(declare-fun node_guard_n52_ok () Bool)
(declare-fun node_52_ok () Bool)
(declare-fun node_guard_n51_ok () Bool)
(declare-fun node_51_ok () Bool)
(declare-fun node_upd_n51_ok () Bool)
(declare-fun node_j16_ok () Bool)
(declare-fun node_guard_n50_ok () Bool)
(declare-fun node_50_ok () Bool)
(declare-fun node_guard_n49_ok () Bool)
(declare-fun node_call_stash_49_pred_1_ok () Bool)
(declare-fun node_call_pre_49_pred_1_ok () Bool)
(declare-fun node_49_ok () Bool)
(declare-fun node_call_post_49_ok () Bool)
(declare-fun node_upd_n49_ok () Bool)
(declare-fun node_guard_n48_ok () Bool)
(declare-fun node_48_ok () Bool)
(declare-fun node_guard_n47_ok () Bool)
(declare-fun node_call_stash_47_pred_1_ok () Bool)
(declare-fun node_call_pre_47_pred_1_ok () Bool)
(declare-fun node_47_ok () Bool)
(declare-fun node_call_post_47_ok () Bool)
(declare-fun node_upd_n47_ok () Bool)
(declare-fun node_guard_n46_ok () Bool)
(declare-fun node_46_ok () Bool)
(declare-fun node_upd_n46_ok () Bool)
(declare-fun node_guard_n45_ok () Bool)
(declare-fun node_45_ok () Bool)
(declare-fun node_guard_n44_ok () Bool)
(declare-fun node_call_stash_44_pred_1_ok () Bool)
(declare-fun node_call_pre_44_pred_1_ok () Bool)
(declare-fun node_44_ok () Bool)
(declare-fun node_call_post_44_ok () Bool)
(declare-fun node_upd_n44_ok () Bool)
(declare-fun node_guard_n43_ok () Bool)
(declare-fun node_43_ok () Bool)
(declare-fun node_upd_n43_ok () Bool)
(declare-fun node_guard_n42_ok () Bool)
(declare-fun node_42_ok () Bool)
(declare-fun node_upd_n42_ok () Bool)
(declare-fun node_guard_n41_ok () Bool)
(declare-fun node_41_ok () Bool)
(declare-fun node_guard_n40_ok () Bool)
(declare-fun node_call_stash_40_pred_1_ok () Bool)
(declare-fun node_call_pre_40_pred_1_ok () Bool)
(declare-fun node_40_ok () Bool)
(declare-fun node_call_post_40_ok () Bool)
(declare-fun node_upd_n40_ok () Bool)
(declare-fun node_guard_n39_ok () Bool)
(declare-fun node_39_ok () Bool)
(declare-fun node_upd_n39_ok () Bool)
(declare-fun node_guard_n38_ok () Bool)
(declare-fun node_38_ok () Bool)
(declare-fun node_upd_n38_ok () Bool)
(declare-fun node_guard_n37_ok () Bool)
(declare-fun node_37_ok () Bool)
(declare-fun node_j17_ok () Bool)
(declare-fun node_guard_n36_ok () Bool)
(declare-fun node_36_ok () Bool)
(declare-fun node_guard_n35_ok () Bool)
(declare-fun node_call_stash_35_pred_1_ok () Bool)
(declare-fun node_call_pre_35_pred_1_ok () Bool)
(declare-fun node_35_ok () Bool)
(declare-fun node_call_post_35_ok () Bool)
(declare-fun node_upd_n35_ok () Bool)
(declare-fun node_guard_n34_ok () Bool)
(declare-fun node_34_ok () Bool)
(declare-fun node_upd_n34_ok () Bool)
(declare-fun node_guard_n33_ok () Bool)
(declare-fun node_33_ok () Bool)
(declare-fun node_upd_n33_ok () Bool)
(declare-fun node_j18_ok () Bool)
(declare-fun node_guard_n32_ok () Bool)
(declare-fun node_32_ok () Bool)
(declare-fun node_j19_ok () Bool)
(declare-fun node_guard_n31_ok () Bool)
(declare-fun node_31_ok () Bool)
(declare-fun node_guard_n30_ok () Bool)
(declare-fun node_call_stash_30_pred_1_ok () Bool)
(declare-fun node_call_pre_30_pred_1_ok () Bool)
(declare-fun node_30_ok () Bool)
(declare-fun node_call_post_30_ok () Bool)
(declare-fun node_upd_n30_ok () Bool)
(declare-fun node_guard_n29_ok () Bool)
(declare-fun node_29_ok () Bool)
(declare-fun node_upd_n29_ok () Bool)
(declare-fun node_guard_n28_ok () Bool)
(declare-fun node_28_ok () Bool)
(declare-fun node_upd_n28_ok () Bool)
(declare-fun node_j20_ok () Bool)
(declare-fun node_guard_n27_ok () Bool)
(declare-fun node_27_ok () Bool)
(declare-fun node_j21_ok () Bool)
(declare-fun node_guard_n26_ok () Bool)
(declare-fun node_26_ok () Bool)
(declare-fun node_guard_n25_ok () Bool)
(declare-fun node_call_stash_25_pred_1_ok () Bool)
(declare-fun node_call_pre_25_pred_1_ok () Bool)
(declare-fun node_25_ok () Bool)
(declare-fun node_call_post_25_ok () Bool)
(declare-fun node_upd_n25_ok () Bool)
(declare-fun node_guard_n24_ok () Bool)
(declare-fun node_24_ok () Bool)
(declare-fun node_upd_n24_ok () Bool)
(declare-fun node_guard_n23_ok () Bool)
(declare-fun node_23_ok () Bool)
(declare-fun node_upd_n23_ok () Bool)
(declare-fun node_j22_ok () Bool)
(declare-fun node_19_ok () Bool)
(declare-fun node_loop_20_latch_2_ok () Bool)

(declare-fun Mem~1 () (Array (_ BitVec 64) (_ BitVec 8)))
(declare-fun HTD~1 () (Array (_ BitVec 64) Bool))
(declare-fun PMS~1 () PMS)
(declare-fun GhostAssertions~1 () (Array (_ BitVec 50) (_ BitVec 64)))
(declare-fun test@ghost~1 () (_ BitVec 32))
(declare-fun Mem/subject-arg~1 () (Array (_ BitVec 64) (_ BitVec 8)))
(declare-fun HTD/subject-arg~1 () (Array (_ BitVec 64) Bool))
(declare-fun PMS/subject-arg~1 () PMS)
(declare-fun GhostAssertions/subject-arg~1 () (Array (_ BitVec 50) (_ BitVec 64)))
(declare-fun test@ghost/subject-arg~1 () (_ BitVec 32))
(declare-fun Mem@assigned~1 () Bool)
(declare-fun HTD@assigned~1 () Bool)
(declare-fun PMS@assigned~1 () Bool)
(declare-fun GhostAssertions@assigned~1 () Bool)
(declare-fun test@ghost@assigned~1 () Bool)
(declare-fun ret__int@v@assigned~1 () Bool)
(declare-fun rv@space@ret__ptr_to_void@v@assigned~1 () Bool)
(declare-fun loop@19@count@assigned~1 () Bool)
(declare-fun rv@space@ret__int@v@assigned~1 () Bool)
(declare-fun ret__char@v@assigned~1 () Bool)
(declare-fun rv@space@ret__char@v@assigned~1 () Bool)
(declare-fun err___int@v@assigned~1 () Bool)
(declare-fun enqueued___unsigned_longlong@v@assigned~1 () Bool)
(declare-fun x___ptr_to_char@v@assigned~1 () Bool)
(declare-fun enqueued___unsigned_longlong@v~1 () (_ BitVec 64))
(declare-fun enqueued___unsigned_longlong@v@assigned~2 () Bool)
(declare-fun rx_ring_mux@global-symbol () (_ BitVec 64))
(assert (= rx_ring_mux@global-symbol (_ bv0 64)))
(assert 
(forall ((h (Array (_ BitVec 64) Bool)) (i (_ BitVec 64))) 
    (!
      (=> (and (bvule (_ bv0 64) i) (bvult (_ bv16 64) i)) (= (select h i) true))
      :pattern (= (select h i) true)
    )
))
(declare-fun ring___ptr_to_struct_ring_buffer_C@v/call-arg~1 () (_ BitVec 64))
(declare-fun Mem/call-arg~1 () (Array (_ BitVec 64) (_ BitVec 8)))
(declare-fun HTD/call-arg~1 () (Array (_ BitVec 64) Bool))
(declare-fun PMS/call-arg~1 () PMS)
(declare-fun GhostAssertions/call-arg~1 () (Array (_ BitVec 50) (_ BitVec 64)))
(declare-fun test@ghost/call-arg~1 () (_ BitVec 32))
(declare-fun rv@space@ret__char@v@assigned~2 () Bool)
(declare-fun test@ghost@assigned~2 () Bool)
(declare-fun ret__char@v~1 () (_ BitVec 8))
(declare-fun rv@space@ret__char@v~1 () (_ BitVec 8))
(declare-fun ret__char@v@assigned~2 () Bool)
(declare-fun ret__int@v~1 () (_ BitVec 32))
(declare-fun ret__int@v@assigned~2 () Bool)
(declare-fun ret__char@v@assigned~4 () Bool)
(declare-fun HTD/call-arg~3 () (Array (_ BitVec 64) Bool))
(declare-fun ret__int@v~3 () (_ BitVec 32))
(declare-fun test@ghost/call-arg~3 () (_ BitVec 32))
(declare-fun PMS/call-arg~3 () PMS)
(declare-fun test@ghost~2 () (_ BitVec 32))
(declare-fun test@ghost~4 () (_ BitVec 32))
(declare-fun test@ghost@assigned~4 () Bool)
(declare-fun rv@space@ret__char@v@assigned~4 () Bool)
(declare-fun ret__int@v@assigned~4 () Bool)
(declare-fun ret__char@v~3 () (_ BitVec 8))
(declare-fun rv@space@ret__char@v~3 () (_ BitVec 8))
(declare-fun Mem/call-arg~3 () (Array (_ BitVec 64) (_ BitVec 8)))
(declare-fun GhostAssertions/call-arg~3 () (Array (_ BitVec 50) (_ BitVec 64)))
(declare-fun ring___ptr_to_struct_ring_buffer_C@v/call-arg~3 () (_ BitVec 64))
(declare-fun rx_ring_cli@global-symbol () (_ BitVec 64))
(assert (= rx_ring_cli@global-symbol (_ bv16 64)))
(assert 
(forall ((h (Array (_ BitVec 64) Bool)) (i (_ BitVec 64))) 
    (=> (and (bvule (_ bv16 64) i) (bvult (_ bv32 64) i)) (= (select h i) true))
    :pattern ((= (select h i) true))
))
(declare-fun ring___ptr_to_struct_ring_buffer_C@v/call-arg~2 () (_ BitVec 64))
(declare-fun Mem/call-arg~2 () (Array (_ BitVec 64) (_ BitVec 8)))
(declare-fun HTD/call-arg~2 () (Array (_ BitVec 64) Bool))
(declare-fun PMS/call-arg~2 () PMS)
(declare-fun GhostAssertions/call-arg~2 () (Array (_ BitVec 50) (_ BitVec 64)))
(declare-fun test@ghost/call-arg~2 () (_ BitVec 32))
(declare-fun rv@space@ret__char@v@assigned~3 () Bool)
(declare-fun test@ghost@assigned~3 () Bool)
(declare-fun rv@space@ret__char@v~2 () (_ BitVec 8))
(declare-fun ret__char@v~2 () (_ BitVec 8))
(declare-fun ret__char@v@assigned~3 () Bool)
(declare-fun ret__int@v~2 () (_ BitVec 32))
(declare-fun ret__int@v@assigned~3 () Bool)
(declare-fun test@ghost~3 () (_ BitVec 32))
(declare-fun ret__char@v@assigned~6 () Bool)
(declare-fun HTD/call-arg~5 () (Array (_ BitVec 64) Bool))
(declare-fun ret__int@v~5 () (_ BitVec 32))
(declare-fun test@ghost/call-arg~5 () (_ BitVec 32))
(declare-fun PMS/call-arg~5 () PMS)
(declare-fun test@ghost~6 () (_ BitVec 32))
(declare-fun test@ghost@assigned~6 () Bool)
(declare-fun rv@space@ret__char@v@assigned~6 () Bool)
(declare-fun ret__int@v@assigned~6 () Bool)
(declare-fun ret__char@v~5 () (_ BitVec 8))
(declare-fun rv@space@ret__char@v~5 () (_ BitVec 8))
(declare-fun Mem/call-arg~5 () (Array (_ BitVec 64) (_ BitVec 8)))
(declare-fun GhostAssertions/call-arg~5 () (Array (_ BitVec 50) (_ BitVec 64)))
(declare-fun ring___ptr_to_struct_ring_buffer_C@v/call-arg~5 () (_ BitVec 64))
(declare-fun ring___ptr_to_struct_ring_buffer_C@v/call-arg~4 () (_ BitVec 64))
(declare-fun Mem/call-arg~4 () (Array (_ BitVec 64) (_ BitVec 8)))
(declare-fun HTD/call-arg~4 () (Array (_ BitVec 64) Bool))
(declare-fun PMS/call-arg~4 () PMS)
(declare-fun GhostAssertions/call-arg~4 () (Array (_ BitVec 50) (_ BitVec 64)))
(declare-fun test@ghost/call-arg~4 () (_ BitVec 32))
(declare-fun rv@space@ret__char@v@assigned~5 () Bool)
(declare-fun test@ghost@assigned~5 () Bool)
(declare-fun rv@space@ret__char@v~4 () (_ BitVec 8))
(declare-fun ret__char@v~4 () (_ BitVec 8))
(declare-fun ret__char@v@assigned~5 () Bool)
(declare-fun ret__int@v~4 () (_ BitVec 32))
(declare-fun ret__int@v@assigned~5 () Bool)
(declare-fun test@ghost~5 () (_ BitVec 32))
(declare-fun ret__char@v@assigned~8 () Bool)
(declare-fun HTD/call-arg~7 () (Array (_ BitVec 64) Bool))
(declare-fun ret__int@v~7 () (_ BitVec 32))
(declare-fun test@ghost/call-arg~7 () (_ BitVec 32))
(declare-fun PMS/call-arg~7 () PMS)
(declare-fun test@ghost~8 () (_ BitVec 32))
(declare-fun test@ghost@assigned~8 () Bool)
(declare-fun rv@space@ret__char@v@assigned~8 () Bool)
(declare-fun ret__int@v@assigned~8 () Bool)
(declare-fun ret__char@v~7 () (_ BitVec 8))
(declare-fun rv@space@ret__char@v~7 () (_ BitVec 8))
(declare-fun Mem/call-arg~7 () (Array (_ BitVec 64) (_ BitVec 8)))
(declare-fun GhostAssertions/call-arg~7 () (Array (_ BitVec 50) (_ BitVec 64)))
(declare-fun ring___ptr_to_struct_ring_buffer_C@v/call-arg~7 () (_ BitVec 64))
(declare-fun ring___ptr_to_struct_ring_buffer_C@v/call-arg~6 () (_ BitVec 64))
(declare-fun Mem/call-arg~6 () (Array (_ BitVec 64) (_ BitVec 8)))
(declare-fun HTD/call-arg~6 () (Array (_ BitVec 64) Bool))
(declare-fun PMS/call-arg~6 () PMS)
(declare-fun GhostAssertions/call-arg~6 () (Array (_ BitVec 50) (_ BitVec 64)))
(declare-fun test@ghost/call-arg~6 () (_ BitVec 32))
(declare-fun rv@space@ret__char@v@assigned~7 () Bool)
(declare-fun test@ghost@assigned~7 () Bool)
(declare-fun ret__char@v~6 () (_ BitVec 8))
(declare-fun rv@space@ret__char@v~6 () (_ BitVec 8))
(declare-fun ret__char@v@assigned~7 () Bool)
(declare-fun ret__int@v~6 () (_ BitVec 32))
(declare-fun ret__int@v@assigned~7 () Bool)
(declare-fun test@ghost~7 () (_ BitVec 32))
(declare-fun loop@19@count~1 () (_ BitVec 64))
(declare-fun Mem@assigned~2 () Bool)
(declare-fun test@ghost@assigned~9 () Bool)
(declare-fun enqueued___unsigned_longlong@v@assigned~3 () Bool)
(declare-fun PMS@assigned~2 () Bool)
(declare-fun GhostAssertions@assigned~2 () Bool)
(declare-fun HTD@assigned~2 () Bool)
(declare-fun ret__int@v@assigned~9 () Bool)
(declare-fun ret__int@v~8 () (_ BitVec 32))
(declare-fun HTD~2 () (Array (_ BitVec 64) Bool))
(declare-fun ring___ptr_to_struct_ring_buffer_C@v/call-arg~9 () (_ BitVec 64))
(declare-fun Mem~2 () (Array (_ BitVec 64) (_ BitVec 8)))
(declare-fun Mem/call-arg~9 () (Array (_ BitVec 64) (_ BitVec 8)))
(declare-fun HTD/call-arg~9 () (Array (_ BitVec 64) Bool))
(declare-fun PMS/call-arg~9 () PMS)
(declare-fun PMS~2 () PMS)
(declare-fun GhostAssertions/call-arg~9 () (Array (_ BitVec 50) (_ BitVec 64)))
(declare-fun GhostAssertions~2 () (Array (_ BitVec 50) (_ BitVec 64)))
(declare-fun test@ghost~9 () (_ BitVec 32))
(declare-fun test@ghost/call-arg~9 () (_ BitVec 32))
(declare-fun rv@space@ret__char@v@assigned~10 () Bool)
(declare-fun test@ghost@assigned~10 () Bool)
(declare-fun rv@space@ret__char@v~9 () (_ BitVec 8))
(declare-fun ret__char@v~9 () (_ BitVec 8))
(declare-fun ret__char@v@assigned~10 () Bool)
(declare-fun Mem~3 () (Array (_ BitVec 64) (_ BitVec 8)))
(declare-fun Mem@assigned~3 () Bool)
(declare-fun enqueued___unsigned_longlong@v~2 () (_ BitVec 64))
(declare-fun test@ghost/call-arg~11 () (_ BitVec 32))
(declare-fun test@ghost@assigned~12 () Bool)
(declare-fun test@ghost~10 () (_ BitVec 32))
(declare-fun test@ghost~12 () (_ BitVec 32))
(declare-fun ch___unsigned@v/call-arg~1 () (_ BitVec 32))
(declare-fun test@ghost/call-arg~10 () (_ BitVec 32))
(declare-fun test@ghost@assigned~11 () Bool)
(declare-fun test@ghost~11 () (_ BitVec 32))
(declare-fun ret__int@v~9 () (_ BitVec 32))
(declare-fun ret__int@v@assigned~10 () Bool)
(declare-fun ret__int@v@assigned~12 () Bool)
(declare-fun ret__int@v~11 () (_ BitVec 32))
(declare-fun ret__int@v~10 () (_ BitVec 32))
(declare-fun ret__int@v@assigned~11 () Bool)
(declare-fun test@ghost/call-arg~13 () (_ BitVec 32))
(declare-fun test@ghost@assigned~14 () Bool)
(declare-fun ch___unsigned@v/call-arg~3 () (_ BitVec 32))
(declare-fun test@ghost~14 () (_ BitVec 32))
(declare-fun ch___unsigned@v/call-arg~2 () (_ BitVec 32))
(declare-fun test@ghost/call-arg~12 () (_ BitVec 32))
(declare-fun test@ghost@assigned~13 () Bool)
(declare-fun test@ghost~13 () (_ BitVec 32))
(declare-fun cookie@global-symbol () (_ BitVec 64))
(assert (= cookie@global-symbol (_ bv32 64)))
(assert 
(forall ((h (Array (_ BitVec 64) Bool)) (i (_ BitVec 64))) 
    (=> (and (bvule (_ bv32 64) i) (bvult (_ bv40 64) i)) (= (select h i) true))
    :pattern ((= (select h i) true))
))
(declare-fun m_len@global-symbol () (_ BitVec 64))
(assert (= m_len@global-symbol (_ bv40 64)))
(assert 
(forall ((h (Array (_ BitVec 64) Bool)) (i (_ BitVec 64))) 
    (=> (and (bvule (_ bv40 64) i) (bvult (_ bv48 64) i)) (= (select h i) true))
    :pattern ((= (select h i) true))
))
(declare-fun m_addr@global-symbol () (_ BitVec 64))
(assert (= m_addr@global-symbol (_ bv48 64)))
(assert 
(forall ((h (Array (_ BitVec 64) Bool)) (i (_ BitVec 64))) 
    (=> (and (bvule (_ bv48 64) i) (bvult (_ bv56 64) i)) (= (select h i) true))
    :pattern ((= (select h i) true))
))
(declare-fun ring___ptr_to_struct_ring_handle_C@v/call-arg~2 () (_ BitVec 64))
(declare-fun addr___ptr_to_unsigned_longlong@v/call-arg~2 () (_ BitVec 64))
(declare-fun len___ptr_to_unsigned@v/call-arg~2 () (_ BitVec 64))
(declare-fun cookie___ptr_to_ptr_to_void@v/call-arg~2 () (_ BitVec 64))
(declare-fun rv@space@ret__int@v@assigned~3 () Bool)
(declare-fun HTD@assigned~3 () Bool)
(declare-fun PMS@assigned~3 () Bool)
(declare-fun GhostAssertions@assigned~3 () Bool)
(declare-fun rv@space@ret__int@v~2 () (_ BitVec 32))
(declare-fun err___int@v~2 () (_ BitVec 32))
(declare-fun err___int@v@assigned~3 () Bool)
(declare-fun HTD~3 () (Array (_ BitVec 64) Bool))
(declare-fun c_len@global-symbol () (_ BitVec 64))
(assert (= c_len@global-symbol (_ bv56 64)))
(assert 
(forall ((h (Array (_ BitVec 64) Bool)) (i (_ BitVec 64))) 
    (=> (and (bvule (_ bv56 64) i) (bvult (_ bv64 64) i)) (= (select h i) true))
    :pattern ((= (select h i) true))
))
(declare-fun c_addr@global-symbol () (_ BitVec 64))
(assert (= c_addr@global-symbol (_ bv64 64)))
(assert 
(forall ((h (Array (_ BitVec 64) Bool)) (i (_ BitVec 64))) 
    (=> (and (bvule (_ bv64 64) i) (bvult (_ bv72 64) i)) (= (select h i) true))
    :pattern ((= (select h i) true))
))
(declare-fun cookie2@global-symbol () (_ BitVec 64))
(assert (= cookie2@global-symbol (_ bv72 64)))
(assert 
(forall ((h (Array (_ BitVec 64) Bool)) (i (_ BitVec 64))) 
    (=> (and (bvule (_ bv72 64) i) (bvult (_ bv80 64) i)) (= (select h i) true))
    :pattern ((= (select h i) true))
))
(declare-fun ring___ptr_to_struct_ring_handle_C@v/call-arg~3 () (_ BitVec 64))
(declare-fun addr___ptr_to_unsigned_longlong@v/call-arg~3 () (_ BitVec 64))
(declare-fun len___ptr_to_unsigned@v/call-arg~3 () (_ BitVec 64))
(declare-fun cookie___ptr_to_ptr_to_void@v/call-arg~3 () (_ BitVec 64))
(declare-fun Mem/call-arg~10 () (Array (_ BitVec 64) (_ BitVec 8)))
(declare-fun HTD/call-arg~10 () (Array (_ BitVec 64) Bool))
(declare-fun PMS/call-arg~10 () PMS)
(declare-fun PMS~3 () PMS)
(declare-fun GhostAssertions/call-arg~10 () (Array (_ BitVec 50) (_ BitVec 64)))
(declare-fun GhostAssertions~3 () (Array (_ BitVec 50) (_ BitVec 64)))
(declare-fun rv@space@ret__int@v@assigned~4 () Bool)
(declare-fun Mem@assigned~4 () Bool)
(declare-fun HTD@assigned~4 () Bool)
(declare-fun PMS@assigned~4 () Bool)
(declare-fun GhostAssertions@assigned~4 () Bool)
(declare-fun err___int@v~3 () (_ BitVec 32))
(declare-fun rv@space@ret__int@v~3 () (_ BitVec 32))
(declare-fun err___int@v@assigned~4 () Bool)
(declare-fun HTD~4 () (Array (_ BitVec 64) Bool))
(declare-fun Mem~4 () (Array (_ BitVec 64) (_ BitVec 8)))
(declare-fun Mem@assigned~6 () Bool)
(declare-fun Mem~6 () (Array (_ BitVec 64) (_ BitVec 8)))
(declare-fun x___ptr_to_char@v@assigned~4 () Bool)
(declare-fun x___ptr_to_char@v@assigned~2 () Bool)
(declare-fun x___ptr_to_char@v~1 () (_ BitVec 64))
(declare-fun x___ptr_to_char@v~3 () (_ BitVec 64))
(declare-fun x___ptr_to_char@v~2 () (_ BitVec 64))
(declare-fun x___ptr_to_char@v@assigned~3 () Bool)
(declare-fun Mem~5 () (Array (_ BitVec 64) (_ BitVec 8)))
(declare-fun Mem@assigned~5 () Bool)
(declare-fun Mem@assigned~8 () Bool)
(declare-fun Mem~8 () (Array (_ BitVec 64) (_ BitVec 8)))
(declare-fun x___ptr_to_char@v@assigned~6 () Bool)
(declare-fun x___ptr_to_char@v~5 () (_ BitVec 64))
(declare-fun x___ptr_to_char@v~4 () (_ BitVec 64))
(declare-fun x___ptr_to_char@v@assigned~5 () Bool)
(declare-fun Mem~7 () (Array (_ BitVec 64) (_ BitVec 8)))
(declare-fun Mem@assigned~7 () Bool)
(declare-fun ptr_dst___ptr_to_void@v/call-arg~2 () (_ BitVec 64))
(declare-fun ptr_src___ptr_to_void@v/call-arg~2 () (_ BitVec 64))
(declare-fun n___unsigned_long@v/call-arg~2 () (_ BitVec 64))
(declare-fun Mem/call-arg~11 () (Array (_ BitVec 64) (_ BitVec 8)))
(declare-fun HTD/call-arg~11 () (Array (_ BitVec 64) Bool))
(declare-fun PMS~4 () PMS)
(declare-fun PMS/call-arg~11 () PMS)
(declare-fun GhostAssertions/call-arg~11 () (Array (_ BitVec 50) (_ BitVec 64)))
(declare-fun GhostAssertions~4 () (Array (_ BitVec 50) (_ BitVec 64)))
(declare-fun rv@space@ret__ptr_to_void@v@assigned~3 () Bool)
(declare-fun Mem@assigned~9 () Bool)
(declare-fun HTD@assigned~5 () Bool)
(declare-fun PMS@assigned~5 () Bool)
(declare-fun GhostAssertions@assigned~5 () Bool)
(declare-fun HTD~5 () (Array (_ BitVec 64) Bool))
(declare-fun ring___ptr_to_struct_ring_handle_C@v/call-arg~4 () (_ BitVec 64))
(declare-fun addr___unsigned_longlong@v/call-arg~2 () (_ BitVec 64))
(declare-fun Mem~9 () (Array (_ BitVec 64) (_ BitVec 8)))
(declare-fun len___unsigned@v/call-arg~2 () (_ BitVec 32))
(declare-fun cookie___ptr_to_void@v/call-arg~2 () (_ BitVec 64))
(declare-fun Mem/call-arg~12 () (Array (_ BitVec 64) (_ BitVec 8)))
(declare-fun HTD/call-arg~12 () (Array (_ BitVec 64) Bool))
(declare-fun PMS/call-arg~12 () PMS)
(declare-fun PMS~5 () PMS)
(declare-fun GhostAssertions~5 () (Array (_ BitVec 50) (_ BitVec 64)))
(declare-fun GhostAssertions/call-arg~12 () (Array (_ BitVec 50) (_ BitVec 64)))
(declare-fun rv@space@ret__int@v@assigned~5 () Bool)
(declare-fun Mem@assigned~10 () Bool)
(declare-fun HTD@assigned~6 () Bool)
(declare-fun PMS@assigned~6 () Bool)
(declare-fun GhostAssertions@assigned~6 () Bool)
(declare-fun err___int@v~4 () (_ BitVec 32))
(declare-fun rv@space@ret__int@v~4 () (_ BitVec 32))
(declare-fun err___int@v@assigned~5 () Bool)
(declare-fun HTD~6 () (Array (_ BitVec 64) Bool))
(declare-fun ring___ptr_to_struct_ring_handle_C@v/call-arg~5 () (_ BitVec 64))
(declare-fun addr___unsigned_longlong@v/call-arg~3 () (_ BitVec 64))
(declare-fun Mem~10 () (Array (_ BitVec 64) (_ BitVec 8)))
(declare-fun len___unsigned@v/call-arg~3 () (_ BitVec 32))
(declare-fun cookie___ptr_to_void@v/call-arg~3 () (_ BitVec 64))
(declare-fun Mem/call-arg~13 () (Array (_ BitVec 64) (_ BitVec 8)))
(declare-fun HTD/call-arg~13 () (Array (_ BitVec 64) Bool))
(declare-fun PMS/call-arg~13 () PMS)
(declare-fun PMS~6 () PMS)
(declare-fun GhostAssertions~6 () (Array (_ BitVec 50) (_ BitVec 64)))
(declare-fun GhostAssertions/call-arg~13 () (Array (_ BitVec 50) (_ BitVec 64)))
(declare-fun rv@space@ret__int@v@assigned~6 () Bool)
(declare-fun Mem@assigned~11 () Bool)
(declare-fun HTD@assigned~7 () Bool)
(declare-fun PMS@assigned~7 () Bool)
(declare-fun GhostAssertions@assigned~7 () Bool)
(declare-fun rv@space@ret__int@v~5 () (_ BitVec 32))
(declare-fun err___int@v~5 () (_ BitVec 32))
(declare-fun err___int@v@assigned~6 () Bool)
(declare-fun enqueued___unsigned_longlong@v~3 () (_ BitVec 64))
(declare-fun enqueued___unsigned_longlong@v@assigned~4 () Bool)
(declare-fun HTD~7 () (Array (_ BitVec 64) Bool))
(declare-fun Mem~11 () (Array (_ BitVec 64) (_ BitVec 8)))
(declare-fun Mem/call-arg~14 () (Array (_ BitVec 64) (_ BitVec 8)))
(declare-fun HTD/call-arg~14 () (Array (_ BitVec 64) Bool))
(declare-fun PMS/call-arg~14 () PMS)
(declare-fun PMS~7 () PMS)
(declare-fun GhostAssertions~7 () (Array (_ BitVec 50) (_ BitVec 64)))
(declare-fun GhostAssertions/call-arg~14 () (Array (_ BitVec 50) (_ BitVec 64)))
(declare-fun test@ghost/call-arg~14 () (_ BitVec 32))
(declare-fun test@ghost@assigned~15 () Bool)
(declare-fun test@ghost/call-arg~16 () (_ BitVec 32))
(declare-fun PMS/call-arg~16 () PMS)
(declare-fun test@ghost@assigned~17 () Bool)
(declare-fun ret__char@v~11 () (_ BitVec 8))
(declare-fun ret__char@v@assigned~12 () Bool)
(declare-fun HTD/call-arg~16 () (Array (_ BitVec 64) Bool))
(declare-fun test@ghost~15 () (_ BitVec 32))
(declare-fun test@ghost~17 () (_ BitVec 32))
(declare-fun rv@space@ret__char@v@assigned~12 () Bool)
(declare-fun rv@space@ret__char@v~11 () (_ BitVec 8))
(declare-fun Mem/call-arg~16 () (Array (_ BitVec 64) (_ BitVec 8)))
(declare-fun GhostAssertions/call-arg~16 () (Array (_ BitVec 50) (_ BitVec 64)))
(declare-fun ring___ptr_to_struct_ring_buffer_C@v/call-arg~11 () (_ BitVec 64))
(declare-fun ring___ptr_to_struct_ring_buffer_C@v/call-arg~10 () (_ BitVec 64))
(declare-fun Mem/call-arg~15 () (Array (_ BitVec 64) (_ BitVec 8)))
(declare-fun HTD/call-arg~15 () (Array (_ BitVec 64) Bool))
(declare-fun PMS/call-arg~15 () PMS)
(declare-fun GhostAssertions/call-arg~15 () (Array (_ BitVec 50) (_ BitVec 64)))
(declare-fun test@ghost/call-arg~15 () (_ BitVec 32))
(declare-fun rv@space@ret__char@v@assigned~11 () Bool)
(declare-fun test@ghost@assigned~16 () Bool)
(declare-fun ret__char@v~10 () (_ BitVec 8))
(declare-fun rv@space@ret__char@v~10 () (_ BitVec 8))
(declare-fun ret__char@v@assigned~11 () Bool)
(declare-fun test@ghost~16 () (_ BitVec 32))
(declare-fun test@ghost/call-arg~18 () (_ BitVec 32))
(declare-fun PMS/call-arg~18 () PMS)
(declare-fun test@ghost@assigned~19 () Bool)
(declare-fun ret__int@v@assigned~14 () Bool)
(declare-fun ret__char@v~13 () (_ BitVec 8))
(declare-fun ret__char@v@assigned~14 () Bool)
(declare-fun HTD/call-arg~18 () (Array (_ BitVec 64) Bool))
(declare-fun ret__int@v~13 () (_ BitVec 32))
(declare-fun test@ghost~19 () (_ BitVec 32))
(declare-fun rv@space@ret__char@v@assigned~14 () Bool)
(declare-fun rv@space@ret__char@v~13 () (_ BitVec 8))
(declare-fun Mem/call-arg~18 () (Array (_ BitVec 64) (_ BitVec 8)))
(declare-fun GhostAssertions/call-arg~18 () (Array (_ BitVec 50) (_ BitVec 64)))
(declare-fun ring___ptr_to_struct_ring_buffer_C@v/call-arg~13 () (_ BitVec 64))
(declare-fun ring___ptr_to_struct_ring_buffer_C@v/call-arg~12 () (_ BitVec 64))
(declare-fun Mem/call-arg~17 () (Array (_ BitVec 64) (_ BitVec 8)))
(declare-fun HTD/call-arg~17 () (Array (_ BitVec 64) Bool))
(declare-fun PMS/call-arg~17 () PMS)
(declare-fun GhostAssertions/call-arg~17 () (Array (_ BitVec 50) (_ BitVec 64)))
(declare-fun test@ghost/call-arg~17 () (_ BitVec 32))
(declare-fun rv@space@ret__char@v@assigned~13 () Bool)
(declare-fun test@ghost@assigned~18 () Bool)
(declare-fun ret__char@v~12 () (_ BitVec 8))
(declare-fun rv@space@ret__char@v~12 () (_ BitVec 8))
(declare-fun ret__char@v@assigned~13 () Bool)
(declare-fun ret__int@v~12 () (_ BitVec 32))
(declare-fun ret__int@v@assigned~13 () Bool)
(declare-fun test@ghost~18 () (_ BitVec 32))
(declare-fun test@ghost/call-arg~20 () (_ BitVec 32))
(declare-fun PMS/call-arg~20 () PMS)
(declare-fun test@ghost@assigned~21 () Bool)
(declare-fun ret__int@v@assigned~16 () Bool)
(declare-fun ret__char@v~15 () (_ BitVec 8))
(declare-fun ret__char@v@assigned~16 () Bool)
(declare-fun HTD/call-arg~20 () (Array (_ BitVec 64) Bool))
(declare-fun ret__int@v~15 () (_ BitVec 32))
(declare-fun test@ghost~21 () (_ BitVec 32))
(declare-fun rv@space@ret__char@v@assigned~16 () Bool)
(declare-fun rv@space@ret__char@v~15 () (_ BitVec 8))
(declare-fun Mem/call-arg~20 () (Array (_ BitVec 64) (_ BitVec 8)))
(declare-fun GhostAssertions/call-arg~20 () (Array (_ BitVec 50) (_ BitVec 64)))
(declare-fun ring___ptr_to_struct_ring_buffer_C@v/call-arg~15 () (_ BitVec 64))
(declare-fun ring___ptr_to_struct_ring_buffer_C@v/call-arg~14 () (_ BitVec 64))
(declare-fun Mem/call-arg~19 () (Array (_ BitVec 64) (_ BitVec 8)))
(declare-fun HTD/call-arg~19 () (Array (_ BitVec 64) Bool))
(declare-fun PMS/call-arg~19 () PMS)
(declare-fun GhostAssertions/call-arg~19 () (Array (_ BitVec 50) (_ BitVec 64)))
(declare-fun test@ghost/call-arg~19 () (_ BitVec 32))
(declare-fun rv@space@ret__char@v@assigned~15 () Bool)
(declare-fun test@ghost@assigned~20 () Bool)
(declare-fun rv@space@ret__char@v~14 () (_ BitVec 8))
(declare-fun ret__char@v~14 () (_ BitVec 8))
(declare-fun ret__char@v@assigned~15 () Bool)
(declare-fun ret__int@v~14 () (_ BitVec 32))
(declare-fun ret__int@v@assigned~15 () Bool)
(declare-fun test@ghost~20 () (_ BitVec 32))
(declare-fun loop@19@count~2 () (_ BitVec 64))
(declare-fun loop@19@count~3 () (_ BitVec 64))

(assert (= node_Err_ok false))
(assert (= node_Ret_ok true))
(assert (= node_97_ok node_stash_initial_args_ok))
(assert (= node_stash_initial_args_ok (=> (= Mem/subject-arg~1 Mem~1) (=> (= HTD/subject-arg~1 HTD~1) (=> (= PMS/subject-arg~1 PMS~1) (=> (= GhostAssertions/subject-arg~1 GhostAssertions~1) (=> (= test@ghost/subject-arg~1 test@ghost~1) node_pre_condition_ok)))))))
(assert (= node_pre_condition_ok (=> (and true) node_upd_n97_ok)))
(assert (= node_upd_n97_ok (=> (= Mem@assigned~1 true) (=> (= HTD@assigned~1 true) (=> (= PMS@assigned~1 true) (=> (= GhostAssertions@assigned~1 true) (=> (= test@ghost@assigned~1 true) (=> (= ret__int@v@assigned~1 false) (=> (= rv@space@ret__ptr_to_void@v@assigned~1 false) (=> (= loop@19@count@assigned~1 false) (=> (= rv@space@ret__int@v@assigned~1 false) (=> (= ret__char@v@assigned~1 false) (=> (= rv@space@ret__char@v@assigned~1 false) (=> (= err___int@v@assigned~1 false) (=> (= enqueued___unsigned_longlong@v@assigned~1 false) (=> (= x___ptr_to_char@v@assigned~1 false) node_86_ok))))))))))))))))
(assert (= node_86_ok (=> (= enqueued___unsigned_longlong@v~1 ((_ sign_extend 32) (_ bv0 32))) node_upd_n86_ok)))
(assert (= node_upd_n86_ok (=> (= enqueued___unsigned_longlong@v@assigned~2 true) node_guard_n85_ok)))
(assert (= node_guard_n85_ok (and (=> HTD@assigned~1 node_85_ok) (=> (not HTD@assigned~1) node_Err_ok))))
(assert (= node_85_ok (and (=> (= (select HTD~1 rx_ring_mux@global-symbol) true) node_guard_n84_ok) (=> (not (= (select HTD~1 rx_ring_mux@global-symbol) true)) node_Err_ok))))
(assert (= node_guard_n84_ok (and (=> (and (and (and (and test@ghost@assigned~1 PMS@assigned~1) HTD@assigned~1) GhostAssertions@assigned~1) Mem@assigned~1) node_call_stash_84_pred_1_ok) (=> (not (and (and (and (and test@ghost@assigned~1 PMS@assigned~1) HTD@assigned~1) GhostAssertions@assigned~1) Mem@assigned~1)) node_Err_ok))))
(assert (= node_call_stash_84_pred_1_ok (=> (= ring___ptr_to_struct_ring_buffer_C@v/call-arg~1 (load-word64 Mem~1 (bvadd rx_ring_mux@global-symbol (_ bv8 64)))) (=> (= Mem/call-arg~1 Mem~1) (=> (= HTD/call-arg~1 HTD~1) (=> (= PMS/call-arg~1 PMS~1) (=> (= GhostAssertions/call-arg~1 GhostAssertions~1) (=> (= test@ghost/call-arg~1 test@ghost~1) node_call_pre_84_pred_1_ok))))))))
(assert (= node_call_pre_84_pred_1_ok node_84_ok))
(assert (= node_84_ok node_call_post_84_ok))
(assert (= node_call_post_84_ok (=> true node_upd_n84_ok)))
(assert (= node_upd_n84_ok (=> (= rv@space@ret__char@v@assigned~2 (and (and (and (and (and Mem@assigned~1 Mem@assigned~1) HTD@assigned~1) PMS@assigned~1) GhostAssertions@assigned~1) test@ghost@assigned~1)) (=> (= test@ghost@assigned~2 (and (and (and (and (and Mem@assigned~1 Mem@assigned~1) HTD@assigned~1) PMS@assigned~1) GhostAssertions@assigned~1) test@ghost@assigned~1)) node_guard_n83_ok))))
(assert (= node_guard_n83_ok (and (=> rv@space@ret__char@v@assigned~2 node_83_ok) (=> (not rv@space@ret__char@v@assigned~2) node_Err_ok))))
(assert (= node_83_ok (=> (= ret__char@v~1 rv@space@ret__char@v~1) node_upd_n83_ok)))
(assert (= node_upd_n83_ok (=> (= ret__char@v@assigned~2 rv@space@ret__char@v@assigned~2) node_guard_n82_ok)))
(assert (= node_guard_n82_ok (and (=> ret__char@v@assigned~2 node_82_ok) (=> (not ret__char@v@assigned~2) node_Err_ok))))
(assert (= node_82_ok (=> (= ret__int@v~1 (ite (not (not (= ret__char@v~1 (_ bv0 8)))) (_ bv1 32) (_ bv0 32))) node_upd_n82_ok)))
(assert (= node_upd_n82_ok (=> (= ret__int@v@assigned~2 ret__char@v@assigned~2) node_guard_n81_ok)))
(assert (= node_guard_n81_ok (and (=> ret__int@v@assigned~2 node_81_ok) (=> (not ret__int@v@assigned~2) node_Err_ok))))
(assert (= node_81_ok (and (=> (not (= ret__int@v~1 (_ bv0 32))) node_guard_n80_ok) (=> (= ret__int@v~1 (_ bv0 32)) node_j1_ok))))
(assert (= node_j1_ok (=> (= ret__char@v@assigned~4 ret__char@v@assigned~2) (=> (= HTD/call-arg~3 HTD/call-arg~1) (=> (= ret__int@v~3 ret__int@v~1) (=> (= test@ghost/call-arg~3 test@ghost/call-arg~1) (=> (= PMS/call-arg~3 PMS/call-arg~1) (=> (= test@ghost~4 test@ghost~2) (=> (= test@ghost@assigned~4 test@ghost@assigned~2) (=> (= rv@space@ret__char@v@assigned~4 rv@space@ret__char@v@assigned~2) (=> (= ret__int@v@assigned~4 ret__int@v@assigned~2) (=> (= ret__char@v~3 ret__char@v~1) (=> (= rv@space@ret__char@v~3 rv@space@ret__char@v~1) (=> (= Mem/call-arg~3 Mem/call-arg~1) (=> (= GhostAssertions/call-arg~3 GhostAssertions/call-arg~1) (=> (= ring___ptr_to_struct_ring_buffer_C@v/call-arg~3 ring___ptr_to_struct_ring_buffer_C@v/call-arg~1) node_guard_n76_ok))))))))))))))))
(assert (= node_guard_n80_ok (and (=> HTD@assigned~1 node_80_ok) (=> (not HTD@assigned~1) node_Err_ok))))
(assert (= node_80_ok (and (=> (= (select HTD~1 rx_ring_cli@global-symbol) true) node_guard_n79_ok) (=> (not (= (select HTD~1 rx_ring_cli@global-symbol) true)) node_Err_ok))))
(assert (= node_guard_n79_ok (and (=> (and (and (and (and test@ghost@assigned~2 PMS@assigned~1) HTD@assigned~1) GhostAssertions@assigned~1) Mem@assigned~1) node_call_stash_79_pred_1_ok) (=> (not (and (and (and (and test@ghost@assigned~2 PMS@assigned~1) HTD@assigned~1) GhostAssertions@assigned~1) Mem@assigned~1)) node_Err_ok))))
(assert (= node_call_stash_79_pred_1_ok (=> (= ring___ptr_to_struct_ring_buffer_C@v/call-arg~2 (load-word64 Mem~1 rx_ring_cli@global-symbol)) (=> (= Mem/call-arg~2 Mem~1) (=> (= HTD/call-arg~2 HTD~1) (=> (= PMS/call-arg~2 PMS~1) (=> (= GhostAssertions/call-arg~2 GhostAssertions~1) (=> (= test@ghost/call-arg~2 test@ghost~2) node_call_pre_79_pred_1_ok))))))))
(assert (= node_call_pre_79_pred_1_ok node_79_ok))
(assert (= node_79_ok node_call_post_79_ok))
(assert (= node_call_post_79_ok (=> true node_upd_n79_ok)))
(assert (= node_upd_n79_ok (=> (= rv@space@ret__char@v@assigned~3 (and (and (and (and (and Mem@assigned~1 Mem@assigned~1) HTD@assigned~1) PMS@assigned~1) GhostAssertions@assigned~1) test@ghost@assigned~2)) (=> (= test@ghost@assigned~3 (and (and (and (and (and Mem@assigned~1 Mem@assigned~1) HTD@assigned~1) PMS@assigned~1) GhostAssertions@assigned~1) test@ghost@assigned~2)) node_guard_n78_ok))))
(assert (= node_guard_n78_ok (and (=> rv@space@ret__char@v@assigned~3 node_78_ok) (=> (not rv@space@ret__char@v@assigned~3) node_Err_ok))))
(assert (= node_78_ok (=> (= ret__char@v~2 rv@space@ret__char@v~2) node_upd_n78_ok)))
(assert (= node_upd_n78_ok (=> (= ret__char@v@assigned~3 rv@space@ret__char@v@assigned~3) node_guard_n77_ok)))
(assert (= node_guard_n77_ok (and (=> ret__char@v@assigned~3 node_77_ok) (=> (not ret__char@v@assigned~3) node_Err_ok))))
(assert (= node_77_ok (=> (= ret__int@v~2 (ite (not (not (= ret__char@v~2 (_ bv0 8)))) (_ bv1 32) (_ bv0 32))) node_upd_n77_ok)))
(assert (= node_upd_n77_ok (=> (= ret__int@v@assigned~3 ret__char@v@assigned~3) node_j2_ok)))
(assert (= node_j2_ok (=> (= ret__char@v@assigned~4 ret__char@v@assigned~3) (=> (= HTD/call-arg~3 HTD/call-arg~2) (=> (= ret__int@v~3 ret__int@v~2) (=> (= test@ghost/call-arg~3 test@ghost/call-arg~2) (=> (= PMS/call-arg~3 PMS/call-arg~2) (=> (= test@ghost~4 test@ghost~3) (=> (= test@ghost@assigned~4 test@ghost@assigned~3) (=> (= rv@space@ret__char@v@assigned~4 rv@space@ret__char@v@assigned~3) (=> (= ret__int@v@assigned~4 ret__int@v@assigned~3) (=> (= ret__char@v~3 ret__char@v~2) (=> (= rv@space@ret__char@v~3 rv@space@ret__char@v~2) (=> (= Mem/call-arg~3 Mem/call-arg~2) (=> (= GhostAssertions/call-arg~3 GhostAssertions/call-arg~2) (=> (= ring___ptr_to_struct_ring_buffer_C@v/call-arg~3 ring___ptr_to_struct_ring_buffer_C@v/call-arg~2) node_guard_n76_ok))))))))))))))))
(assert (= node_guard_n76_ok (and (=> ret__int@v@assigned~4 node_76_ok) (=> (not ret__int@v@assigned~4) node_Err_ok))))
(assert (= node_76_ok (and (=> (not (= ret__int@v~3 (_ bv0 32))) node_guard_n75_ok) (=> (= ret__int@v~3 (_ bv0 32)) node_j3_ok))))
(assert (= node_j3_ok (=> (= ret__char@v@assigned~6 ret__char@v@assigned~4) (=> (= HTD/call-arg~5 HTD/call-arg~3) (=> (= ret__int@v~5 ret__int@v~3) (=> (= test@ghost/call-arg~5 test@ghost/call-arg~3) (=> (= PMS/call-arg~5 PMS/call-arg~3) (=> (= test@ghost~6 test@ghost~4) (=> (= test@ghost@assigned~6 test@ghost@assigned~4) (=> (= rv@space@ret__char@v@assigned~6 rv@space@ret__char@v@assigned~4) (=> (= ret__int@v@assigned~6 ret__int@v@assigned~4) (=> (= ret__char@v~5 ret__char@v~3) (=> (= rv@space@ret__char@v~5 rv@space@ret__char@v~3) (=> (= Mem/call-arg~5 Mem/call-arg~3) (=> (= GhostAssertions/call-arg~5 GhostAssertions/call-arg~3) (=> (= ring___ptr_to_struct_ring_buffer_C@v/call-arg~5 ring___ptr_to_struct_ring_buffer_C@v/call-arg~3) node_guard_n71_ok))))))))))))))))
(assert (= node_guard_n75_ok (and (=> HTD@assigned~1 node_75_ok) (=> (not HTD@assigned~1) node_Err_ok))))
(assert (= node_75_ok (and (=> (= (select HTD~1 rx_ring_mux@global-symbol) true) node_guard_n74_ok) (=> (not (= (select HTD~1 rx_ring_mux@global-symbol) true)) node_Err_ok))))
(assert (= node_guard_n74_ok (and (=> (and (and (and (and test@ghost@assigned~4 PMS@assigned~1) HTD@assigned~1) GhostAssertions@assigned~1) Mem@assigned~1) node_call_stash_74_pred_1_ok) (=> (not (and (and (and (and test@ghost@assigned~4 PMS@assigned~1) HTD@assigned~1) GhostAssertions@assigned~1) Mem@assigned~1)) node_Err_ok))))
(assert (= node_call_stash_74_pred_1_ok (=> (= ring___ptr_to_struct_ring_buffer_C@v/call-arg~4 (load-word64 Mem~1 rx_ring_mux@global-symbol)) (=> (= Mem/call-arg~4 Mem~1) (=> (= HTD/call-arg~4 HTD~1) (=> (= PMS/call-arg~4 PMS~1) (=> (= GhostAssertions/call-arg~4 GhostAssertions~1) (=> (= test@ghost/call-arg~4 test@ghost~4) node_call_pre_74_pred_1_ok))))))))
(assert (= node_call_pre_74_pred_1_ok node_74_ok))
(assert (= node_74_ok node_call_post_74_ok))
(assert (= node_call_post_74_ok (=> true node_upd_n74_ok)))
(assert (= node_upd_n74_ok (=> (= rv@space@ret__char@v@assigned~5 (and (and (and (and (and Mem@assigned~1 Mem@assigned~1) HTD@assigned~1) PMS@assigned~1) GhostAssertions@assigned~1) test@ghost@assigned~4)) (=> (= test@ghost@assigned~5 (and (and (and (and (and Mem@assigned~1 Mem@assigned~1) HTD@assigned~1) PMS@assigned~1) GhostAssertions@assigned~1) test@ghost@assigned~4)) node_guard_n73_ok))))
(assert (= node_guard_n73_ok (and (=> rv@space@ret__char@v@assigned~5 node_73_ok) (=> (not rv@space@ret__char@v@assigned~5) node_Err_ok))))
(assert (= node_73_ok (=> (= ret__char@v~4 rv@space@ret__char@v~4) node_upd_n73_ok)))
(assert (= node_upd_n73_ok (=> (= ret__char@v@assigned~5 rv@space@ret__char@v@assigned~5) node_guard_n72_ok)))
(assert (= node_guard_n72_ok (and (=> ret__char@v@assigned~5 node_72_ok) (=> (not ret__char@v@assigned~5) node_Err_ok))))
(assert (= node_72_ok (=> (= ret__int@v~4 (ite (not (not (= ret__char@v~4 (_ bv0 8)))) (_ bv1 32) (_ bv0 32))) node_upd_n72_ok)))
(assert (= node_upd_n72_ok (=> (= ret__int@v@assigned~5 ret__char@v@assigned~5) node_j4_ok)))
(assert (= node_j4_ok (=> (= ret__char@v@assigned~6 ret__char@v@assigned~5) (=> (= HTD/call-arg~5 HTD/call-arg~4) (=> (= ret__int@v~5 ret__int@v~4) (=> (= test@ghost/call-arg~5 test@ghost/call-arg~4) (=> (= PMS/call-arg~5 PMS/call-arg~4) (=> (= test@ghost~6 test@ghost~5) (=> (= test@ghost@assigned~6 test@ghost@assigned~5) (=> (= rv@space@ret__char@v@assigned~6 rv@space@ret__char@v@assigned~5) (=> (= ret__int@v@assigned~6 ret__int@v@assigned~5) (=> (= ret__char@v~5 ret__char@v~4) (=> (= rv@space@ret__char@v~5 rv@space@ret__char@v~4) (=> (= Mem/call-arg~5 Mem/call-arg~4) (=> (= GhostAssertions/call-arg~5 GhostAssertions/call-arg~4) (=> (= ring___ptr_to_struct_ring_buffer_C@v/call-arg~5 ring___ptr_to_struct_ring_buffer_C@v/call-arg~4) node_guard_n71_ok))))))))))))))))
(assert (= node_guard_n71_ok (and (=> ret__int@v@assigned~6 node_71_ok) (=> (not ret__int@v@assigned~6) node_Err_ok))))
(assert (= node_71_ok (and (=> (not (= ret__int@v~5 (_ bv0 32))) node_guard_n70_ok) (=> (= ret__int@v~5 (_ bv0 32)) node_j5_ok))))
(assert (= node_j5_ok (=> (= ret__char@v@assigned~8 ret__char@v@assigned~6) (=> (= HTD/call-arg~7 HTD/call-arg~5) (=> (= ret__int@v~7 ret__int@v~5) (=> (= test@ghost/call-arg~7 test@ghost/call-arg~5) (=> (= PMS/call-arg~7 PMS/call-arg~5) (=> (= test@ghost~8 test@ghost~6) (=> (= test@ghost@assigned~8 test@ghost@assigned~6) (=> (= rv@space@ret__char@v@assigned~8 rv@space@ret__char@v@assigned~6) (=> (= ret__int@v@assigned~8 ret__int@v@assigned~6) (=> (= ret__char@v~7 ret__char@v~5) (=> (= rv@space@ret__char@v~7 rv@space@ret__char@v~5) (=> (= Mem/call-arg~7 Mem/call-arg~5) (=> (= GhostAssertions/call-arg~7 GhostAssertions/call-arg~5) (=> (= ring___ptr_to_struct_ring_buffer_C@v/call-arg~7 ring___ptr_to_struct_ring_buffer_C@v/call-arg~5) node_22_ok))))))))))))))))
(assert (= node_guard_n70_ok (and (=> HTD@assigned~1 node_70_ok) (=> (not HTD@assigned~1) node_Err_ok))))
(assert (= node_70_ok (and (=> (= (select HTD~1 rx_ring_cli@global-symbol) true) node_guard_n69_ok) (=> (not (= (select HTD~1 rx_ring_cli@global-symbol) true)) node_Err_ok))))
(assert (= node_guard_n69_ok (and (=> (and (and (and (and test@ghost@assigned~6 PMS@assigned~1) HTD@assigned~1) GhostAssertions@assigned~1) Mem@assigned~1) node_call_stash_69_pred_1_ok) (=> (not (and (and (and (and test@ghost@assigned~6 PMS@assigned~1) HTD@assigned~1) GhostAssertions@assigned~1) Mem@assigned~1)) node_Err_ok))))
(assert (= node_call_stash_69_pred_1_ok (=> (= ring___ptr_to_struct_ring_buffer_C@v/call-arg~6 (load-word64 Mem~1 (bvadd rx_ring_cli@global-symbol (_ bv8 64)))) (=> (= Mem/call-arg~6 Mem~1) (=> (= HTD/call-arg~6 HTD~1) (=> (= PMS/call-arg~6 PMS~1) (=> (= GhostAssertions/call-arg~6 GhostAssertions~1) (=> (= test@ghost/call-arg~6 test@ghost~6) node_call_pre_69_pred_1_ok))))))))
(assert (= node_call_pre_69_pred_1_ok node_69_ok))
(assert (= node_69_ok node_call_post_69_ok))
(assert (= node_call_post_69_ok (=> true node_upd_n69_ok)))
(assert (= node_upd_n69_ok (=> (= rv@space@ret__char@v@assigned~7 (and (and (and (and (and Mem@assigned~1 Mem@assigned~1) HTD@assigned~1) PMS@assigned~1) GhostAssertions@assigned~1) test@ghost@assigned~6)) (=> (= test@ghost@assigned~7 (and (and (and (and (and Mem@assigned~1 Mem@assigned~1) HTD@assigned~1) PMS@assigned~1) GhostAssertions@assigned~1) test@ghost@assigned~6)) node_guard_n68_ok))))
(assert (= node_guard_n68_ok (and (=> rv@space@ret__char@v@assigned~7 node_68_ok) (=> (not rv@space@ret__char@v@assigned~7) node_Err_ok))))
(assert (= node_68_ok (=> (= ret__char@v~6 rv@space@ret__char@v~6) node_upd_n68_ok)))
(assert (= node_upd_n68_ok (=> (= ret__char@v@assigned~7 rv@space@ret__char@v@assigned~7) node_guard_n67_ok)))
(assert (= node_guard_n67_ok (and (=> ret__char@v@assigned~7 node_67_ok) (=> (not ret__char@v@assigned~7) node_Err_ok))))
(assert (= node_67_ok (=> (= ret__int@v~6 (ite (not (not (= ret__char@v~6 (_ bv0 8)))) (_ bv1 32) (_ bv0 32))) node_upd_n67_ok)))
(assert (= node_upd_n67_ok (=> (= ret__int@v@assigned~7 ret__char@v@assigned~7) node_j6_ok)))
(assert (= node_j6_ok (=> (= ret__char@v@assigned~8 ret__char@v@assigned~7) (=> (= HTD/call-arg~7 HTD/call-arg~6) (=> (= ret__int@v~7 ret__int@v~6) (=> (= test@ghost/call-arg~7 test@ghost/call-arg~6) (=> (= PMS/call-arg~7 PMS/call-arg~6) (=> (= test@ghost~8 test@ghost~7) (=> (= test@ghost@assigned~8 test@ghost@assigned~7) (=> (= rv@space@ret__char@v@assigned~8 rv@space@ret__char@v@assigned~7) (=> (= ret__int@v@assigned~8 ret__int@v@assigned~7) (=> (= ret__char@v~7 ret__char@v~6) (=> (= rv@space@ret__char@v~7 rv@space@ret__char@v~6) (=> (= Mem/call-arg~7 Mem/call-arg~6) (=> (= GhostAssertions/call-arg~7 GhostAssertions/call-arg~6) (=> (= ring___ptr_to_struct_ring_buffer_C@v/call-arg~7 ring___ptr_to_struct_ring_buffer_C@v/call-arg~6) node_22_ok))))))))))))))))
(assert (= node_22_ok (=> (= loop@19@count~1 (_ bv0 64)) node_loop_20_latch_1_ok)))
(assert (= node_loop_20_latch_1_ok (and (=> (and ret__int@v@assigned~8 enqueued___unsigned_longlong@v@assigned~2 Mem@assigned~1 HTD@assigned~1 PMS@assigned~1 GhostAssertions@assigned~1 test@ghost@assigned~8) node_20_ok) (=> (not (and ret__int@v@assigned~8 enqueued___unsigned_longlong@v@assigned~2 Mem@assigned~1 HTD@assigned~1 PMS@assigned~1 GhostAssertions@assigned~1 test@ghost@assigned~8)) node_Err_ok))))
(assert (= node_20_ok (and (=> true node_loop_20_inv_asm_1_ok) (=> false node_loop_20_inv_asm_2_ok))))
(assert (= node_loop_20_inv_asm_2_ok (=> (and ret__int@v@assigned~9 enqueued___unsigned_longlong@v@assigned~3 Mem@assigned~2 HTD@assigned~2 PMS@assigned~2 GhostAssertions@assigned~2 test@ghost@assigned~9) node_Err_ok)))
(assert (= node_loop_20_inv_asm_1_ok (=> (and ret__int@v@assigned~9 enqueued___unsigned_longlong@v@assigned~3 Mem@assigned~2 HTD@assigned~2 PMS@assigned~2 GhostAssertions@assigned~2 test@ghost@assigned~9) node_guard_n21_ok)))
(assert (= node_guard_n21_ok (and (=> ret__int@v@assigned~9 node_21_ok) (=> (not ret__int@v@assigned~9) node_Err_ok))))
(assert (= node_21_ok (and (=> (not (= ret__int@v~8 (_ bv0 32))) node_guard_n66_ok) (=> (= ret__int@v~8 (_ bv0 32)) node_guard_n18_ok))))
(assert (= node_guard_n18_ok (and (=> HTD@assigned~2 node_18_ok) (=> (not HTD@assigned~2) node_Err_ok))))
(assert (= node_18_ok (and (=> (= (select HTD~2 rx_ring_mux@global-symbol) true) node_guard_n17_ok) (=> (not (= (select HTD~2 rx_ring_mux@global-symbol) true)) node_Err_ok))))
(assert (= node_guard_n17_ok (and (=> (and (and (and (and test@ghost@assigned~9 PMS@assigned~2) HTD@assigned~2) GhostAssertions@assigned~2) Mem@assigned~2) node_call_stash_17_pred_1_ok) (=> (not (and (and (and (and test@ghost@assigned~9 PMS@assigned~2) HTD@assigned~2) GhostAssertions@assigned~2) Mem@assigned~2)) node_Err_ok))))
(assert (= node_call_stash_17_pred_1_ok (=> (= ring___ptr_to_struct_ring_buffer_C@v/call-arg~9 (load-word64 Mem~2 (bvadd rx_ring_mux@global-symbol (_ bv8 64)))) (=> (= Mem/call-arg~9 Mem~2) (=> (= HTD/call-arg~9 HTD~2) (=> (= PMS/call-arg~9 PMS~2) (=> (= GhostAssertions/call-arg~9 GhostAssertions~2) (=> (= test@ghost/call-arg~9 test@ghost~9) node_call_pre_17_pred_1_ok))))))))
(assert (= node_call_pre_17_pred_1_ok node_17_ok))
(assert (= node_17_ok node_call_post_17_ok))
(assert (= node_call_post_17_ok (=> true node_upd_n17_ok)))
(assert (= node_upd_n17_ok (=> (= rv@space@ret__char@v@assigned~10 (and (and (and (and (and Mem@assigned~2 Mem@assigned~2) HTD@assigned~2) PMS@assigned~2) GhostAssertions@assigned~2) test@ghost@assigned~9)) (=> (= test@ghost@assigned~10 (and (and (and (and (and Mem@assigned~2 Mem@assigned~2) HTD@assigned~2) PMS@assigned~2) GhostAssertions@assigned~2) test@ghost@assigned~9)) node_guard_n16_ok))))
(assert (= node_guard_n16_ok (and (=> rv@space@ret__char@v@assigned~10 node_16_ok) (=> (not rv@space@ret__char@v@assigned~10) node_Err_ok))))
(assert (= node_16_ok (=> (= ret__char@v~9 rv@space@ret__char@v~9) node_upd_n16_ok)))
(assert (= node_upd_n16_ok (=> (= ret__char@v@assigned~10 rv@space@ret__char@v@assigned~10) node_guard_n15_ok)))
(assert (= node_guard_n15_ok (and (=> ret__char@v@assigned~10 node_15_ok) (=> (not ret__char@v@assigned~10) node_Err_ok))))
(assert (= node_15_ok (and (=> (not (not (= ret__char@v~9 (_ bv0 8)))) node_guard_n12_ok) (=> (not (= ret__char@v~9 (_ bv0 8))) node_guard_n14_ok))))
(assert (= node_guard_n14_ok (and (=> (and HTD@assigned~2 Mem@assigned~2) node_14_ok) (=> (not (and HTD@assigned~2 Mem@assigned~2)) node_Err_ok))))
(assert (= node_14_ok (and (=> (and (= (select HTD~2 (load-word64 Mem~2 rx_ring_cli@global-symbol)) true) (= (select HTD~2 rx_ring_cli@global-symbol) true)) node_guard_n13_ok) (=> (not (and (= (select HTD~2 (load-word64 Mem~2 rx_ring_cli@global-symbol)) true) (= (select HTD~2 rx_ring_cli@global-symbol) true))) node_Err_ok))))
(assert (= node_guard_n13_ok (and (=> Mem@assigned~2 node_13_ok) (=> (not Mem@assigned~2) node_Err_ok))))
(assert (= node_13_ok (=> (= Mem~3 (store-word8 Mem~2 (bvadd (load-word64 Mem~2 rx_ring_cli@global-symbol) (_ bv13 64)) ((_ extract 7 0) (_ bv0 32)))) node_upd_n13_ok)))
(assert (= node_upd_n13_ok (=> (= Mem@assigned~3 Mem@assigned~2) node_guard_n10_ok)))
(assert (= node_guard_n12_ok (and (=> (and HTD@assigned~2 Mem@assigned~2) node_12_ok) (=> (not (and HTD@assigned~2 Mem@assigned~2)) node_Err_ok))))
(assert (= node_12_ok (and (=> (and (= (select HTD~2 (load-word64 Mem~2 rx_ring_cli@global-symbol)) true) (= (select HTD~2 rx_ring_cli@global-symbol) true)) node_guard_n11_ok) (=> (not (and (= (select HTD~2 (load-word64 Mem~2 rx_ring_cli@global-symbol)) true) (= (select HTD~2 rx_ring_cli@global-symbol) true))) node_Err_ok))))
(assert (= node_guard_n11_ok (and (=> Mem@assigned~2 node_11_ok) (=> (not Mem@assigned~2) node_Err_ok))))
(assert (= node_11_ok (=> (= Mem~3 (store-word8 Mem~2 (bvadd (load-word64 Mem~2 rx_ring_cli@global-symbol) (_ bv13 64)) ((_ extract 7 0) (_ bv0 32)))) node_upd_n11_ok)))
(assert (= node_upd_n11_ok (=> (= Mem@assigned~3 Mem@assigned~2) node_guard_n10_ok)))
(assert (= node_guard_n10_ok (and (=> (and HTD@assigned~2 Mem@assigned~3) node_10_ok) (=> (not (and HTD@assigned~2 Mem@assigned~3)) node_Err_ok))))
(assert (= node_10_ok (and (=> (and (= (select HTD~2 (load-word64 Mem~3 (bvadd rx_ring_cli@global-symbol (_ bv8 64)))) true) (= (select HTD~2 rx_ring_cli@global-symbol) true)) node_guard_n9_ok) (=> (not (and (= (select HTD~2 (load-word64 Mem~3 (bvadd rx_ring_cli@global-symbol (_ bv8 64)))) true) (= (select HTD~2 rx_ring_cli@global-symbol) true))) node_Err_ok))))
(assert (= node_guard_n9_ok (and (=> (and enqueued___unsigned_longlong@v@assigned~3 Mem@assigned~3) node_9_ok) (=> (not (and enqueued___unsigned_longlong@v@assigned~3 Mem@assigned~3)) node_Err_ok))))
(assert (= node_9_ok (and (=> (and (not (= (load-word8 Mem~3 (bvadd (load-word64 Mem~3 (bvadd rx_ring_cli@global-symbol (_ bv8 64))) (_ bv13 64))) (_ bv0 8))) (not (= enqueued___unsigned_longlong@v~2 (_ bv0 64)))) node_guard_n8_ok) (=> (not (and (not (= (load-word8 Mem~3 (bvadd (load-word64 Mem~3 (bvadd rx_ring_cli@global-symbol (_ bv8 64))) (_ bv13 64))) (_ bv0 8))) (not (= enqueued___unsigned_longlong@v~2 (_ bv0 64))))) node_j7_ok))))
(assert (= node_j7_ok (=> (= test@ghost/call-arg~11 test@ghost/call-arg~9) (=> (= test@ghost@assigned~12 test@ghost@assigned~10) (=> (= test@ghost~12 test@ghost~10) node_guard_n7_ok)))))
(assert (= node_guard_n8_ok (and (=> test@ghost@assigned~10 node_call_stash_8_pred_1_ok) (=> (not test@ghost@assigned~10) node_Err_ok))))
(assert (= node_call_stash_8_pred_1_ok (=> (= ch___unsigned@v/call-arg~1 (_ bv1 32)) (=> (= test@ghost/call-arg~10 test@ghost~10) node_call_pre_8_pred_1_ok))))
(assert (= node_call_pre_8_pred_1_ok node_8_ok))
(assert (= node_8_ok node_call_post_8_ok))
(assert (= node_call_post_8_ok (=> true node_upd_n8_ok)))
(assert (= node_upd_n8_ok (=> (= test@ghost@assigned~11 test@ghost@assigned~10) node_j8_ok)))
(assert (= node_j8_ok (=> (= test@ghost/call-arg~11 test@ghost/call-arg~10) (=> (= test@ghost@assigned~12 test@ghost@assigned~11) (=> (= test@ghost~12 test@ghost~11) node_guard_n7_ok)))))
(assert (= node_guard_n7_ok (and (=> enqueued___unsigned_longlong@v@assigned~3 node_7_ok) (=> (not enqueued___unsigned_longlong@v@assigned~3) node_Err_ok))))
(assert (= node_7_ok (=> (= ret__int@v~9 (ite (not (= enqueued___unsigned_longlong@v~2 (_ bv0 64))) (_ bv1 32) (_ bv0 32))) node_upd_n7_ok)))
(assert (= node_upd_n7_ok (=> (= ret__int@v@assigned~10 enqueued___unsigned_longlong@v@assigned~3) node_guard_n6_ok)))
(assert (= node_guard_n6_ok (and (=> ret__int@v@assigned~10 node_6_ok) (=> (not ret__int@v@assigned~10) node_Err_ok))))
(assert (= node_6_ok (and (=> (not (= ret__int@v~9 (_ bv0 32))) node_guard_n5_ok) (=> (= ret__int@v~9 (_ bv0 32)) node_j9_ok))))
(assert (= node_j9_ok (=> (= ret__int@v@assigned~12 ret__int@v@assigned~10) (=> (= ret__int@v~11 ret__int@v~9) node_guard_n3_ok))))
(assert (= node_guard_n5_ok (and (=> (and HTD@assigned~2 Mem@assigned~3) node_5_ok) (=> (not (and HTD@assigned~2 Mem@assigned~3)) node_Err_ok))))
(assert (= node_5_ok (and (=> (and (= (select HTD~2 (load-word64 Mem~3 rx_ring_mux@global-symbol)) true) (= (select HTD~2 rx_ring_mux@global-symbol) true)) node_guard_n4_ok) (=> (not (and (= (select HTD~2 (load-word64 Mem~3 rx_ring_mux@global-symbol)) true) (= (select HTD~2 rx_ring_mux@global-symbol) true))) node_Err_ok))))
(assert (= node_guard_n4_ok (and (=> Mem@assigned~3 node_4_ok) (=> (not Mem@assigned~3) node_Err_ok))))
(assert (= node_4_ok (=> (= ret__int@v~10 (ite (not (= (load-word8 Mem~3 (bvadd (load-word64 Mem~3 rx_ring_mux@global-symbol) (_ bv13 64))) (_ bv0 8))) (_ bv1 32) (_ bv0 32))) node_upd_n4_ok)))
(assert (= node_upd_n4_ok (=> (= ret__int@v@assigned~11 Mem@assigned~3) node_j10_ok)))
(assert (= node_j10_ok (=> (= ret__int@v@assigned~12 ret__int@v@assigned~11) (=> (= ret__int@v~11 ret__int@v~10) node_guard_n3_ok))))
(assert (= node_guard_n3_ok (and (=> ret__int@v@assigned~12 node_3_ok) (=> (not ret__int@v@assigned~12) node_Err_ok))))
(assert (= node_3_ok (and (=> (not (= ret__int@v~11 (_ bv0 32))) node_guard_n2_ok) (=> (= ret__int@v~11 (_ bv0 32)) node_j11_ok))))
(assert (= node_j11_ok (=> (= test@ghost/call-arg~13 test@ghost/call-arg~11) (=> (= test@ghost@assigned~14 test@ghost@assigned~12) (=> (= ch___unsigned@v/call-arg~3 ch___unsigned@v/call-arg~1) (=> (= test@ghost~14 test@ghost~12) node_1_ok))))))
(assert (= node_guard_n2_ok (and (=> test@ghost@assigned~12 node_call_stash_2_pred_1_ok) (=> (not test@ghost@assigned~12) node_Err_ok))))
(assert (= node_call_stash_2_pred_1_ok (=> (= ch___unsigned@v/call-arg~2 (_ bv0 32)) (=> (= test@ghost/call-arg~12 test@ghost~12) node_call_pre_2_pred_1_ok))))
(assert (= node_call_pre_2_pred_1_ok node_2_ok))
(assert (= node_2_ok node_call_post_2_ok))
(assert (= node_call_post_2_ok (=> true node_upd_n2_ok)))
(assert (= node_upd_n2_ok (=> (= test@ghost@assigned~13 test@ghost@assigned~12) node_j12_ok)))
(assert (= node_j12_ok (=> (= test@ghost/call-arg~13 test@ghost/call-arg~12) (=> (= test@ghost@assigned~14 test@ghost@assigned~13) (=> (= ch___unsigned@v/call-arg~3 ch___unsigned@v/call-arg~2) (=> (= test@ghost~14 test@ghost~13) node_1_ok))))))
(assert (= node_1_ok node_post_condition_ok))
(assert (= node_post_condition_ok (and (=> (and true) node_Ret_ok) (=> (not (and true)) node_Err_ok))))
(assert (= node_guard_n66_ok (and (=> HTD@assigned~2 node_66_ok) (=> (not HTD@assigned~2) node_Err_ok))))
(assert (= node_66_ok (and (=> (and (and (and (= (select HTD~2 rx_ring_mux@global-symbol) true) (= (select HTD~2 m_addr@global-symbol) true)) (= (select HTD~2 m_len@global-symbol) true)) (= (select HTD~2 cookie@global-symbol) true)) node_guard_n65_ok) (=> (not (and (and (and (= (select HTD~2 rx_ring_mux@global-symbol) true) (= (select HTD~2 m_addr@global-symbol) true)) (= (select HTD~2 m_len@global-symbol) true)) (= (select HTD~2 cookie@global-symbol) true))) node_Err_ok))))
(assert (= node_guard_n65_ok (and (=> (and (and (and (and test@ghost@assigned~9 PMS@assigned~2) HTD@assigned~2) GhostAssertions@assigned~2) Mem@assigned~2) node_call_stash_65_pred_1_ok) (=> (not (and (and (and (and test@ghost@assigned~9 PMS@assigned~2) HTD@assigned~2) GhostAssertions@assigned~2) Mem@assigned~2)) node_Err_ok))))
(assert (= node_call_stash_65_pred_1_ok (=> (= ring___ptr_to_struct_ring_handle_C@v/call-arg~2 rx_ring_mux@global-symbol) (=> (= addr___ptr_to_unsigned_longlong@v/call-arg~2 m_addr@global-symbol) (=> (= len___ptr_to_unsigned@v/call-arg~2 m_len@global-symbol) (=> (= cookie___ptr_to_ptr_to_void@v/call-arg~2 cookie@global-symbol) (=> (= Mem/call-arg~9 Mem~2) (=> (= HTD/call-arg~9 HTD~2) (=> (= PMS/call-arg~9 PMS~2) (=> (= GhostAssertions/call-arg~9 GhostAssertions~2) (=> (= test@ghost/call-arg~9 test@ghost~9) node_call_pre_65_pred_1_ok)))))))))))
(assert (= node_call_pre_65_pred_1_ok node_65_ok))
(assert (= node_65_ok node_call_post_65_ok))
(assert (= node_call_post_65_ok (=> true node_upd_n65_ok)))
(assert (= node_upd_n65_ok (=> (= rv@space@ret__int@v@assigned~3 (and (and (and (and Mem@assigned~2 HTD@assigned~2) PMS@assigned~2) GhostAssertions@assigned~2) test@ghost@assigned~9)) (=> (= Mem@assigned~3 (and (and (and (and Mem@assigned~2 HTD@assigned~2) PMS@assigned~2) GhostAssertions@assigned~2) test@ghost@assigned~9)) (=> (= HTD@assigned~3 (and (and (and (and Mem@assigned~2 HTD@assigned~2) PMS@assigned~2) GhostAssertions@assigned~2) test@ghost@assigned~9)) (=> (= PMS@assigned~3 (and (and (and (and Mem@assigned~2 HTD@assigned~2) PMS@assigned~2) GhostAssertions@assigned~2) test@ghost@assigned~9)) (=> (= GhostAssertions@assigned~3 (and (and (and (and Mem@assigned~2 HTD@assigned~2) PMS@assigned~2) GhostAssertions@assigned~2) test@ghost@assigned~9)) (=> (= test@ghost@assigned~10 (and (and (and (and Mem@assigned~2 HTD@assigned~2) PMS@assigned~2) GhostAssertions@assigned~2) test@ghost@assigned~9)) node_guard_n64_ok))))))))
(assert (= node_guard_n64_ok (and (=> rv@space@ret__int@v@assigned~3 node_64_ok) (=> (not rv@space@ret__int@v@assigned~3) node_Err_ok))))
(assert (= node_64_ok (=> (= err___int@v~2 rv@space@ret__int@v~2) node_upd_n64_ok)))
(assert (= node_upd_n64_ok (=> (= err___int@v@assigned~3 rv@space@ret__int@v@assigned~3) node_guard_n63_ok)))
(assert (= node_guard_n63_ok (and (=> HTD@assigned~3 node_63_ok) (=> (not HTD@assigned~3) node_Err_ok))))
(assert (= node_63_ok (and (=> (and (and (and (= (select HTD~3 rx_ring_cli@global-symbol) true) (= (select HTD~3 c_addr@global-symbol) true)) (= (select HTD~3 c_len@global-symbol) true)) (= (select HTD~3 cookie2@global-symbol) true)) node_guard_n62_ok) (=> (not (and (and (and (= (select HTD~3 rx_ring_cli@global-symbol) true) (= (select HTD~3 c_addr@global-symbol) true)) (= (select HTD~3 c_len@global-symbol) true)) (= (select HTD~3 cookie2@global-symbol) true))) node_Err_ok))))
(assert (= node_guard_n62_ok (and (=> (and (and (and (and test@ghost@assigned~10 PMS@assigned~3) HTD@assigned~3) GhostAssertions@assigned~3) Mem@assigned~3) node_call_stash_62_pred_1_ok) (=> (not (and (and (and (and test@ghost@assigned~10 PMS@assigned~3) HTD@assigned~3) GhostAssertions@assigned~3) Mem@assigned~3)) node_Err_ok))))
(assert (= node_call_stash_62_pred_1_ok (=> (= ring___ptr_to_struct_ring_handle_C@v/call-arg~3 rx_ring_cli@global-symbol) (=> (= addr___ptr_to_unsigned_longlong@v/call-arg~3 c_addr@global-symbol) (=> (= len___ptr_to_unsigned@v/call-arg~3 c_len@global-symbol) (=> (= cookie___ptr_to_ptr_to_void@v/call-arg~3 cookie2@global-symbol) (=> (= Mem/call-arg~10 Mem~3) (=> (= HTD/call-arg~10 HTD~3) (=> (= PMS/call-arg~10 PMS~3) (=> (= GhostAssertions/call-arg~10 GhostAssertions~3) (=> (= test@ghost/call-arg~10 test@ghost~10) node_call_pre_62_pred_1_ok)))))))))))
(assert (= node_call_pre_62_pred_1_ok node_62_ok))
(assert (= node_62_ok node_call_post_62_ok))
(assert (= node_call_post_62_ok (=> true node_upd_n62_ok)))
(assert (= node_upd_n62_ok (=> (= rv@space@ret__int@v@assigned~4 (and (and (and (and Mem@assigned~3 HTD@assigned~3) PMS@assigned~3) GhostAssertions@assigned~3) test@ghost@assigned~10)) (=> (= Mem@assigned~4 (and (and (and (and Mem@assigned~3 HTD@assigned~3) PMS@assigned~3) GhostAssertions@assigned~3) test@ghost@assigned~10)) (=> (= HTD@assigned~4 (and (and (and (and Mem@assigned~3 HTD@assigned~3) PMS@assigned~3) GhostAssertions@assigned~3) test@ghost@assigned~10)) (=> (= PMS@assigned~4 (and (and (and (and Mem@assigned~3 HTD@assigned~3) PMS@assigned~3) GhostAssertions@assigned~3) test@ghost@assigned~10)) (=> (= GhostAssertions@assigned~4 (and (and (and (and Mem@assigned~3 HTD@assigned~3) PMS@assigned~3) GhostAssertions@assigned~3) test@ghost@assigned~10)) (=> (= test@ghost@assigned~11 (and (and (and (and Mem@assigned~3 HTD@assigned~3) PMS@assigned~3) GhostAssertions@assigned~3) test@ghost@assigned~10)) node_guard_n61_ok))))))))
(assert (= node_guard_n61_ok (and (=> rv@space@ret__int@v@assigned~4 node_61_ok) (=> (not rv@space@ret__int@v@assigned~4) node_Err_ok))))
(assert (= node_61_ok (=> (= err___int@v~3 rv@space@ret__int@v~3) node_upd_n61_ok)))
(assert (= node_upd_n61_ok (=> (= err___int@v@assigned~4 rv@space@ret__int@v@assigned~4) node_guard_n60_ok)))
(assert (= node_guard_n60_ok (and (=> HTD@assigned~4 node_60_ok) (=> (not HTD@assigned~4) node_Err_ok))))
(assert (= node_60_ok (and (=> (and (and (and (= (select HTD~4 c_addr@global-symbol) true) (= (bvmul ((_ sign_extend 32) (_ bv2048 32)) ((_ sign_extend 32) (_ bv512 32))) ((_ sign_extend 32) (bvmul (_ bv2048 32) (_ bv512 32))))) (= (select HTD~4 c_addr@global-symbol) true)) (= (select HTD~4 c_addr@global-symbol) true)) node_guard_n59_ok) (=> (not (and (and (and (= (select HTD~4 c_addr@global-symbol) true) (= (bvmul ((_ sign_extend 32) (_ bv2048 32)) ((_ sign_extend 32) (_ bv512 32))) ((_ sign_extend 32) (bvmul (_ bv2048 32) (_ bv512 32))))) (= (select HTD~4 c_addr@global-symbol) true)) (= (select HTD~4 c_addr@global-symbol) true))) node_Err_ok))))
(assert (= node_guard_n59_ok (and (=> Mem@assigned~4 node_59_ok) (=> (not Mem@assigned~4) node_Err_ok))))
(assert (= node_59_ok (and (=> (or (or (not (not (= (load-word64 Mem~4 c_addr@global-symbol) (_ bv0 64)))) (bvult (load-word64 Mem~4 c_addr@global-symbol) (_ bv0 64))) (bvule (bvadd (_ bv0 64) ((_ sign_extend 32) (bvmul (_ bv2048 32) (_ bv512 32)))) (load-word64 Mem~4 c_addr@global-symbol))) node_58_ok) (=> (not (or (or (not (not (= (load-word64 Mem~4 c_addr@global-symbol) (_ bv0 64)))) (bvult (load-word64 Mem~4 c_addr@global-symbol) (_ bv0 64))) (bvule (bvadd (_ bv0 64) ((_ sign_extend 32) (bvmul (_ bv2048 32) (_ bv512 32)))) (load-word64 Mem~4 c_addr@global-symbol)))) node_j13_ok))))
(assert (= node_j13_ok (=> (= Mem@assigned~6 Mem@assigned~4) (=> (= Mem~6 Mem~4) (=> (= x___ptr_to_char@v@assigned~4 x___ptr_to_char@v@assigned~2) (=> (= x___ptr_to_char@v~3 x___ptr_to_char@v~1) node_guard_n55_ok))))))
(assert (= node_58_ok (=> (= x___ptr_to_char@v~2 ((_ sign_extend 32) (_ bv0 32))) node_upd_n58_ok)))
(assert (= node_upd_n58_ok (=> (= x___ptr_to_char@v@assigned~3 true) node_guard_n57_ok)))
(assert (= node_guard_n57_ok (and (=> (and HTD@assigned~4 x___ptr_to_char@v@assigned~3) node_57_ok) (=> (not (and HTD@assigned~4 x___ptr_to_char@v@assigned~3)) node_Err_ok))))
(assert (= node_57_ok (and (=> (= (select HTD~4 x___ptr_to_char@v~2) true) node_guard_n56_ok) (=> (not (= (select HTD~4 x___ptr_to_char@v~2) true)) node_Err_ok))))
(assert (= node_guard_n56_ok (and (=> (and x___ptr_to_char@v@assigned~3 Mem@assigned~4) node_56_ok) (=> (not (and x___ptr_to_char@v@assigned~3 Mem@assigned~4)) node_Err_ok))))
(assert (= node_56_ok (=> (= Mem~5 (store-word8 Mem~4 x___ptr_to_char@v~2 ((_ extract 7 0) (_ bv97 32)))) node_upd_n56_ok)))
(assert (= node_upd_n56_ok (=> (= Mem@assigned~5 (and x___ptr_to_char@v@assigned~3 Mem@assigned~4)) node_j14_ok)))
(assert (= node_j14_ok (=> (= Mem@assigned~6 Mem@assigned~5) (=> (= Mem~6 Mem~5) (=> (= x___ptr_to_char@v@assigned~4 x___ptr_to_char@v@assigned~3) (=> (= x___ptr_to_char@v~3 x___ptr_to_char@v~2) node_guard_n55_ok))))))
(assert (= node_guard_n55_ok (and (=> HTD@assigned~4 node_55_ok) (=> (not HTD@assigned~4) node_Err_ok))))
(assert (= node_55_ok (and (=> (and (= (select HTD~4 m_len@global-symbol) true) (= (select HTD~4 c_len@global-symbol) true)) node_guard_n54_ok) (=> (not (and (= (select HTD~4 m_len@global-symbol) true) (= (select HTD~4 c_len@global-symbol) true))) node_Err_ok))))
(assert (= node_guard_n54_ok (and (=> Mem@assigned~6 node_54_ok) (=> (not Mem@assigned~6) node_Err_ok))))
(assert (= node_54_ok (and (=> (bvult (load-word32 Mem~6 c_len@global-symbol) (load-word32 Mem~6 m_len@global-symbol)) node_53_ok) (=> (not (bvult (load-word32 Mem~6 c_len@global-symbol) (load-word32 Mem~6 m_len@global-symbol))) node_j15_ok))))
(assert (= node_j15_ok (=> (= Mem@assigned~8 Mem@assigned~6) (=> (= Mem~8 Mem~6) (=> (= x___ptr_to_char@v@assigned~6 x___ptr_to_char@v@assigned~4) (=> (= x___ptr_to_char@v~5 x___ptr_to_char@v~3) node_guard_n50_ok))))))
(assert (= node_53_ok (=> (= x___ptr_to_char@v~4 ((_ sign_extend 32) (_ bv0 32))) node_upd_n53_ok)))
(assert (= node_upd_n53_ok (=> (= x___ptr_to_char@v@assigned~5 true) node_guard_n52_ok)))
(assert (= node_guard_n52_ok (and (=> (and HTD@assigned~4 x___ptr_to_char@v@assigned~5) node_52_ok) (=> (not (and HTD@assigned~4 x___ptr_to_char@v@assigned~5)) node_Err_ok))))
(assert (= node_52_ok (and (=> (= (select HTD~4 x___ptr_to_char@v~4) true) node_guard_n51_ok) (=> (not (= (select HTD~4 x___ptr_to_char@v~4) true)) node_Err_ok))))
(assert (= node_guard_n51_ok (and (=> (and x___ptr_to_char@v@assigned~5 Mem@assigned~6) node_51_ok) (=> (not (and x___ptr_to_char@v@assigned~5 Mem@assigned~6)) node_Err_ok))))
(assert (= node_51_ok (=> (= Mem~7 (store-word8 Mem~6 x___ptr_to_char@v~4 ((_ extract 7 0) (_ bv97 32)))) node_upd_n51_ok)))
(assert (= node_upd_n51_ok (=> (= Mem@assigned~7 (and x___ptr_to_char@v@assigned~5 Mem@assigned~6)) node_j16_ok)))
(assert (= node_j16_ok (=> (= Mem@assigned~8 Mem@assigned~7) (=> (= Mem~8 Mem~7) (=> (= x___ptr_to_char@v@assigned~6 x___ptr_to_char@v@assigned~5) (=> (= x___ptr_to_char@v~5 x___ptr_to_char@v~4) node_guard_n50_ok))))))
(assert (= node_guard_n50_ok (and (=> HTD@assigned~4 node_50_ok) (=> (not HTD@assigned~4) node_Err_ok))))
(assert (= node_50_ok (and (=> (and (and (= (select HTD~4 c_addr@global-symbol) true) (= (select HTD~4 m_addr@global-symbol) true)) (= (select HTD~4 m_len@global-symbol) true)) node_guard_n49_ok) (=> (not (and (and (= (select HTD~4 c_addr@global-symbol) true) (= (select HTD~4 m_addr@global-symbol) true)) (= (select HTD~4 m_len@global-symbol) true))) node_Err_ok))))
(assert (= node_guard_n49_ok (and (=> (and (and (and (and test@ghost@assigned~11 PMS@assigned~4) HTD@assigned~4) GhostAssertions@assigned~4) Mem@assigned~8) node_call_stash_49_pred_1_ok) (=> (not (and (and (and (and test@ghost@assigned~11 PMS@assigned~4) HTD@assigned~4) GhostAssertions@assigned~4) Mem@assigned~8)) node_Err_ok))))
(assert (= node_call_stash_49_pred_1_ok (=> (= ptr_dst___ptr_to_void@v/call-arg~2 (load-word64 Mem~8 c_addr@global-symbol)) (=> (= ptr_src___ptr_to_void@v/call-arg~2 (load-word64 Mem~8 m_addr@global-symbol)) (=> (= n___unsigned_long@v/call-arg~2 ((_ zero_extend 32) (load-word32 Mem~8 m_len@global-symbol))) (=> (= Mem/call-arg~11 Mem~8) (=> (= HTD/call-arg~11 HTD~4) (=> (= PMS/call-arg~11 PMS~4) (=> (= GhostAssertions/call-arg~11 GhostAssertions~4) (=> (= test@ghost/call-arg~11 test@ghost~11) node_call_pre_49_pred_1_ok))))))))))
(assert (= node_call_pre_49_pred_1_ok node_49_ok))
(assert (= node_49_ok node_call_post_49_ok))
(assert (= node_call_post_49_ok (=> true node_upd_n49_ok)))
(assert (= node_upd_n49_ok (=> (= rv@space@ret__ptr_to_void@v@assigned~3 (and (and (and (and (and (and (and Mem@assigned~8 Mem@assigned~8) Mem@assigned~8) Mem@assigned~8) HTD@assigned~4) PMS@assigned~4) GhostAssertions@assigned~4) test@ghost@assigned~11)) (=> (= Mem@assigned~9 (and (and (and (and (and (and (and Mem@assigned~8 Mem@assigned~8) Mem@assigned~8) Mem@assigned~8) HTD@assigned~4) PMS@assigned~4) GhostAssertions@assigned~4) test@ghost@assigned~11)) (=> (= HTD@assigned~5 (and (and (and (and (and (and (and Mem@assigned~8 Mem@assigned~8) Mem@assigned~8) Mem@assigned~8) HTD@assigned~4) PMS@assigned~4) GhostAssertions@assigned~4) test@ghost@assigned~11)) (=> (= PMS@assigned~5 (and (and (and (and (and (and (and Mem@assigned~8 Mem@assigned~8) Mem@assigned~8) Mem@assigned~8) HTD@assigned~4) PMS@assigned~4) GhostAssertions@assigned~4) test@ghost@assigned~11)) (=> (= GhostAssertions@assigned~5 (and (and (and (and (and (and (and Mem@assigned~8 Mem@assigned~8) Mem@assigned~8) Mem@assigned~8) HTD@assigned~4) PMS@assigned~4) GhostAssertions@assigned~4) test@ghost@assigned~11)) (=> (= test@ghost@assigned~12 (and (and (and (and (and (and (and Mem@assigned~8 Mem@assigned~8) Mem@assigned~8) Mem@assigned~8) HTD@assigned~4) PMS@assigned~4) GhostAssertions@assigned~4) test@ghost@assigned~11)) node_guard_n48_ok))))))))
(assert (= node_guard_n48_ok (and (=> HTD@assigned~5 node_48_ok) (=> (not HTD@assigned~5) node_Err_ok))))
(assert (= node_48_ok (and (=> (and (and (and (= (select HTD~5 rx_ring_cli@global-symbol) true) (= (select HTD~5 c_addr@global-symbol) true)) (= (select HTD~5 m_len@global-symbol) true)) (= (select HTD~5 cookie2@global-symbol) true)) node_guard_n47_ok) (=> (not (and (and (and (= (select HTD~5 rx_ring_cli@global-symbol) true) (= (select HTD~5 c_addr@global-symbol) true)) (= (select HTD~5 m_len@global-symbol) true)) (= (select HTD~5 cookie2@global-symbol) true))) node_Err_ok))))
(assert (= node_guard_n47_ok (and (=> (and (and (and (and test@ghost@assigned~12 PMS@assigned~5) HTD@assigned~5) GhostAssertions@assigned~5) Mem@assigned~9) node_call_stash_47_pred_1_ok) (=> (not (and (and (and (and test@ghost@assigned~12 PMS@assigned~5) HTD@assigned~5) GhostAssertions@assigned~5) Mem@assigned~9)) node_Err_ok))))
(assert (= node_call_stash_47_pred_1_ok (=> (= ring___ptr_to_struct_ring_handle_C@v/call-arg~4 rx_ring_cli@global-symbol) (=> (= addr___unsigned_longlong@v/call-arg~2 (load-word64 Mem~9 c_addr@global-symbol)) (=> (= len___unsigned@v/call-arg~2 (load-word32 Mem~9 m_len@global-symbol)) (=> (= cookie___ptr_to_void@v/call-arg~2 (load-word64 Mem~9 cookie2@global-symbol)) (=> (= Mem/call-arg~12 Mem~9) (=> (= HTD/call-arg~12 HTD~5) (=> (= PMS/call-arg~12 PMS~5) (=> (= GhostAssertions/call-arg~12 GhostAssertions~5) (=> (= test@ghost/call-arg~12 test@ghost~12) node_call_pre_47_pred_1_ok)))))))))))
(assert (= node_call_pre_47_pred_1_ok node_47_ok))
(assert (= node_47_ok node_call_post_47_ok))
(assert (= node_call_post_47_ok (=> true node_upd_n47_ok)))
(assert (= node_upd_n47_ok (=> (= rv@space@ret__int@v@assigned~5 (and (and (and (and (and (and (and Mem@assigned~9 Mem@assigned~9) Mem@assigned~9) Mem@assigned~9) HTD@assigned~5) PMS@assigned~5) GhostAssertions@assigned~5) test@ghost@assigned~12)) (=> (= Mem@assigned~10 (and (and (and (and (and (and (and Mem@assigned~9 Mem@assigned~9) Mem@assigned~9) Mem@assigned~9) HTD@assigned~5) PMS@assigned~5) GhostAssertions@assigned~5) test@ghost@assigned~12)) (=> (= HTD@assigned~6 (and (and (and (and (and (and (and Mem@assigned~9 Mem@assigned~9) Mem@assigned~9) Mem@assigned~9) HTD@assigned~5) PMS@assigned~5) GhostAssertions@assigned~5) test@ghost@assigned~12)) (=> (= PMS@assigned~6 (and (and (and (and (and (and (and Mem@assigned~9 Mem@assigned~9) Mem@assigned~9) Mem@assigned~9) HTD@assigned~5) PMS@assigned~5) GhostAssertions@assigned~5) test@ghost@assigned~12)) (=> (= GhostAssertions@assigned~6 (and (and (and (and (and (and (and Mem@assigned~9 Mem@assigned~9) Mem@assigned~9) Mem@assigned~9) HTD@assigned~5) PMS@assigned~5) GhostAssertions@assigned~5) test@ghost@assigned~12)) (=> (= test@ghost@assigned~13 (and (and (and (and (and (and (and Mem@assigned~9 Mem@assigned~9) Mem@assigned~9) Mem@assigned~9) HTD@assigned~5) PMS@assigned~5) GhostAssertions@assigned~5) test@ghost@assigned~12)) node_guard_n46_ok))))))))
(assert (= node_guard_n46_ok (and (=> rv@space@ret__int@v@assigned~5 node_46_ok) (=> (not rv@space@ret__int@v@assigned~5) node_Err_ok))))
(assert (= node_46_ok (=> (= err___int@v~4 rv@space@ret__int@v~4) node_upd_n46_ok)))
(assert (= node_upd_n46_ok (=> (= err___int@v@assigned~5 rv@space@ret__int@v@assigned~5) node_guard_n45_ok)))
(assert (= node_guard_n45_ok (and (=> HTD@assigned~6 node_45_ok) (=> (not HTD@assigned~6) node_Err_ok))))
(assert (= node_45_ok (and (=> (and (and (= (select HTD~6 rx_ring_mux@global-symbol) true) (= (select HTD~6 m_addr@global-symbol) true)) (= (select HTD~6 cookie@global-symbol) true)) node_guard_n44_ok) (=> (not (and (and (= (select HTD~6 rx_ring_mux@global-symbol) true) (= (select HTD~6 m_addr@global-symbol) true)) (= (select HTD~6 cookie@global-symbol) true))) node_Err_ok))))
(assert (= node_guard_n44_ok (and (=> (and (and (and (and test@ghost@assigned~13 PMS@assigned~6) HTD@assigned~6) GhostAssertions@assigned~6) Mem@assigned~10) node_call_stash_44_pred_1_ok) (=> (not (and (and (and (and test@ghost@assigned~13 PMS@assigned~6) HTD@assigned~6) GhostAssertions@assigned~6) Mem@assigned~10)) node_Err_ok))))
(assert (= node_call_stash_44_pred_1_ok (=> (= ring___ptr_to_struct_ring_handle_C@v/call-arg~5 rx_ring_mux@global-symbol) (=> (= addr___unsigned_longlong@v/call-arg~3 (load-word64 Mem~10 m_addr@global-symbol)) (=> (= len___unsigned@v/call-arg~3 (_ bv2048 32)) (=> (= cookie___ptr_to_void@v/call-arg~3 (load-word64 Mem~10 cookie@global-symbol)) (=> (= Mem/call-arg~13 Mem~10) (=> (= HTD/call-arg~13 HTD~6) (=> (= PMS/call-arg~13 PMS~6) (=> (= GhostAssertions/call-arg~13 GhostAssertions~6) (=> (= test@ghost/call-arg~13 test@ghost~13) node_call_pre_44_pred_1_ok)))))))))))
(assert (= node_call_pre_44_pred_1_ok node_44_ok))
(assert (= node_44_ok node_call_post_44_ok))
(assert (= node_call_post_44_ok (=> true node_upd_n44_ok)))
(assert (= node_upd_n44_ok (=> (= rv@space@ret__int@v@assigned~6 (and (and (and (and (and (and Mem@assigned~10 Mem@assigned~10) Mem@assigned~10) HTD@assigned~6) PMS@assigned~6) GhostAssertions@assigned~6) test@ghost@assigned~13)) (=> (= Mem@assigned~11 (and (and (and (and (and (and Mem@assigned~10 Mem@assigned~10) Mem@assigned~10) HTD@assigned~6) PMS@assigned~6) GhostAssertions@assigned~6) test@ghost@assigned~13)) (=> (= HTD@assigned~7 (and (and (and (and (and (and Mem@assigned~10 Mem@assigned~10) Mem@assigned~10) HTD@assigned~6) PMS@assigned~6) GhostAssertions@assigned~6) test@ghost@assigned~13)) (=> (= PMS@assigned~7 (and (and (and (and (and (and Mem@assigned~10 Mem@assigned~10) Mem@assigned~10) HTD@assigned~6) PMS@assigned~6) GhostAssertions@assigned~6) test@ghost@assigned~13)) (=> (= GhostAssertions@assigned~7 (and (and (and (and (and (and Mem@assigned~10 Mem@assigned~10) Mem@assigned~10) HTD@assigned~6) PMS@assigned~6) GhostAssertions@assigned~6) test@ghost@assigned~13)) (=> (= test@ghost@assigned~14 (and (and (and (and (and (and Mem@assigned~10 Mem@assigned~10) Mem@assigned~10) HTD@assigned~6) PMS@assigned~6) GhostAssertions@assigned~6) test@ghost@assigned~13)) node_guard_n43_ok))))))))
(assert (= node_guard_n43_ok (and (=> rv@space@ret__int@v@assigned~6 node_43_ok) (=> (not rv@space@ret__int@v@assigned~6) node_Err_ok))))
(assert (= node_43_ok (=> (= err___int@v~5 rv@space@ret__int@v~5) node_upd_n43_ok)))
(assert (= node_upd_n43_ok (=> (= err___int@v@assigned~6 rv@space@ret__int@v@assigned~6) node_guard_n42_ok)))
(assert (= node_guard_n42_ok (and (=> enqueued___unsigned_longlong@v@assigned~3 node_42_ok) (=> (not enqueued___unsigned_longlong@v@assigned~3) node_Err_ok))))
(assert (= node_42_ok (=> (= enqueued___unsigned_longlong@v~3 (bvadd enqueued___unsigned_longlong@v~2 ((_ sign_extend 32) (_ bv1 32)))) node_upd_n42_ok)))
(assert (= node_upd_n42_ok (=> (= enqueued___unsigned_longlong@v@assigned~4 enqueued___unsigned_longlong@v@assigned~3) node_guard_n41_ok)))
(assert (= node_guard_n41_ok (and (=> HTD@assigned~7 node_41_ok) (=> (not HTD@assigned~7) node_Err_ok))))
(assert (= node_41_ok (and (=> (= (select HTD~7 rx_ring_mux@global-symbol) true) node_guard_n40_ok) (=> (not (= (select HTD~7 rx_ring_mux@global-symbol) true)) node_Err_ok))))
(assert (= node_guard_n40_ok (and (=> (and (and (and (and test@ghost@assigned~14 PMS@assigned~7) HTD@assigned~7) GhostAssertions@assigned~7) Mem@assigned~11) node_call_stash_40_pred_1_ok) (=> (not (and (and (and (and test@ghost@assigned~14 PMS@assigned~7) HTD@assigned~7) GhostAssertions@assigned~7) Mem@assigned~11)) node_Err_ok))))
(assert (= node_call_stash_40_pred_1_ok (=> (= ring___ptr_to_struct_ring_buffer_C@v/call-arg~9 (load-word64 Mem~11 (bvadd rx_ring_mux@global-symbol (_ bv8 64)))) (=> (= Mem/call-arg~14 Mem~11) (=> (= HTD/call-arg~14 HTD~7) (=> (= PMS/call-arg~14 PMS~7) (=> (= GhostAssertions/call-arg~14 GhostAssertions~7) (=> (= test@ghost/call-arg~14 test@ghost~14) node_call_pre_40_pred_1_ok))))))))
(assert (= node_call_pre_40_pred_1_ok node_40_ok))
(assert (= node_40_ok node_call_post_40_ok))
(assert (= node_call_post_40_ok (=> true node_upd_n40_ok)))
(assert (= node_upd_n40_ok (=> (= rv@space@ret__char@v@assigned~10 (and (and (and (and (and Mem@assigned~11 Mem@assigned~11) HTD@assigned~7) PMS@assigned~7) GhostAssertions@assigned~7) test@ghost@assigned~14)) (=> (= test@ghost@assigned~15 (and (and (and (and (and Mem@assigned~11 Mem@assigned~11) HTD@assigned~7) PMS@assigned~7) GhostAssertions@assigned~7) test@ghost@assigned~14)) node_guard_n39_ok))))
(assert (= node_guard_n39_ok (and (=> rv@space@ret__char@v@assigned~10 node_39_ok) (=> (not rv@space@ret__char@v@assigned~10) node_Err_ok))))
(assert (= node_39_ok (=> (= ret__char@v~9 rv@space@ret__char@v~9) node_upd_n39_ok)))
(assert (= node_upd_n39_ok (=> (= ret__char@v@assigned~10 rv@space@ret__char@v@assigned~10) node_guard_n38_ok)))
(assert (= node_guard_n38_ok (and (=> ret__char@v@assigned~10 node_38_ok) (=> (not ret__char@v@assigned~10) node_Err_ok))))
(assert (= node_38_ok (=> (= ret__int@v~9 (ite (not (not (= ret__char@v~9 (_ bv0 8)))) (_ bv1 32) (_ bv0 32))) node_upd_n38_ok)))
(assert (= node_upd_n38_ok (=> (= ret__int@v@assigned~10 ret__char@v@assigned~10) node_guard_n37_ok)))
(assert (= node_guard_n37_ok (and (=> ret__int@v@assigned~10 node_37_ok) (=> (not ret__int@v@assigned~10) node_Err_ok))))
(assert (= node_37_ok (and (=> (not (= ret__int@v~9 (_ bv0 32))) node_guard_n36_ok) (=> (= ret__int@v~9 (_ bv0 32)) node_j17_ok))))
(assert (= node_j17_ok (=> (= test@ghost/call-arg~16 test@ghost/call-arg~14) (=> (= PMS/call-arg~16 PMS/call-arg~14) (=> (= test@ghost@assigned~17 test@ghost@assigned~15) (=> (= ret__int@v@assigned~12 ret__int@v@assigned~10) (=> (= ret__char@v~11 ret__char@v~9) (=> (= ret__char@v@assigned~12 ret__char@v@assigned~10) (=> (= HTD/call-arg~16 HTD/call-arg~14) (=> (= ret__int@v~11 ret__int@v~9) (=> (= test@ghost~17 test@ghost~15) (=> (= rv@space@ret__char@v@assigned~12 rv@space@ret__char@v@assigned~10) (=> (= rv@space@ret__char@v~11 rv@space@ret__char@v~9) (=> (= Mem/call-arg~16 Mem/call-arg~14) (=> (= GhostAssertions/call-arg~16 GhostAssertions/call-arg~14) (=> (= ring___ptr_to_struct_ring_buffer_C@v/call-arg~11 ring___ptr_to_struct_ring_buffer_C@v/call-arg~9) node_guard_n32_ok))))))))))))))))
(assert (= node_guard_n36_ok (and (=> HTD@assigned~7 node_36_ok) (=> (not HTD@assigned~7) node_Err_ok))))
(assert (= node_36_ok (and (=> (= (select HTD~7 rx_ring_cli@global-symbol) true) node_guard_n35_ok) (=> (not (= (select HTD~7 rx_ring_cli@global-symbol) true)) node_Err_ok))))
(assert (= node_guard_n35_ok (and (=> (and (and (and (and test@ghost@assigned~15 PMS@assigned~7) HTD@assigned~7) GhostAssertions@assigned~7) Mem@assigned~11) node_call_stash_35_pred_1_ok) (=> (not (and (and (and (and test@ghost@assigned~15 PMS@assigned~7) HTD@assigned~7) GhostAssertions@assigned~7) Mem@assigned~11)) node_Err_ok))))
(assert (= node_call_stash_35_pred_1_ok (=> (= ring___ptr_to_struct_ring_buffer_C@v/call-arg~10 (load-word64 Mem~11 rx_ring_cli@global-symbol)) (=> (= Mem/call-arg~15 Mem~11) (=> (= HTD/call-arg~15 HTD~7) (=> (= PMS/call-arg~15 PMS~7) (=> (= GhostAssertions/call-arg~15 GhostAssertions~7) (=> (= test@ghost/call-arg~15 test@ghost~15) node_call_pre_35_pred_1_ok))))))))
(assert (= node_call_pre_35_pred_1_ok node_35_ok))
(assert (= node_35_ok node_call_post_35_ok))
(assert (= node_call_post_35_ok (=> true node_upd_n35_ok)))
(assert (= node_upd_n35_ok (=> (= rv@space@ret__char@v@assigned~11 (and (and (and (and (and Mem@assigned~11 Mem@assigned~11) HTD@assigned~7) PMS@assigned~7) GhostAssertions@assigned~7) test@ghost@assigned~15)) (=> (= test@ghost@assigned~16 (and (and (and (and (and Mem@assigned~11 Mem@assigned~11) HTD@assigned~7) PMS@assigned~7) GhostAssertions@assigned~7) test@ghost@assigned~15)) node_guard_n34_ok))))
(assert (= node_guard_n34_ok (and (=> rv@space@ret__char@v@assigned~11 node_34_ok) (=> (not rv@space@ret__char@v@assigned~11) node_Err_ok))))
(assert (= node_34_ok (=> (= ret__char@v~10 rv@space@ret__char@v~10) node_upd_n34_ok)))
(assert (= node_upd_n34_ok (=> (= ret__char@v@assigned~11 rv@space@ret__char@v@assigned~11) node_guard_n33_ok)))
(assert (= node_guard_n33_ok (and (=> ret__char@v@assigned~11 node_33_ok) (=> (not ret__char@v@assigned~11) node_Err_ok))))
(assert (= node_33_ok (=> (= ret__int@v~10 (ite (not (not (= ret__char@v~10 (_ bv0 8)))) (_ bv1 32) (_ bv0 32))) node_upd_n33_ok)))
(assert (= node_upd_n33_ok (=> (= ret__int@v@assigned~11 ret__char@v@assigned~11) node_j18_ok)))
(assert (= node_j18_ok (=> (= test@ghost/call-arg~16 test@ghost/call-arg~15) (=> (= PMS/call-arg~16 PMS/call-arg~15) (=> (= test@ghost@assigned~17 test@ghost@assigned~16) (=> (= ret__int@v@assigned~12 ret__int@v@assigned~11) (=> (= ret__char@v~11 ret__char@v~10) (=> (= ret__char@v@assigned~12 ret__char@v@assigned~11) (=> (= HTD/call-arg~16 HTD/call-arg~15) (=> (= ret__int@v~11 ret__int@v~10) (=> (= test@ghost~17 test@ghost~16) (=> (= rv@space@ret__char@v@assigned~12 rv@space@ret__char@v@assigned~11) (=> (= rv@space@ret__char@v~11 rv@space@ret__char@v~10) (=> (= Mem/call-arg~16 Mem/call-arg~15) (=> (= GhostAssertions/call-arg~16 GhostAssertions/call-arg~15) (=> (= ring___ptr_to_struct_ring_buffer_C@v/call-arg~11 ring___ptr_to_struct_ring_buffer_C@v/call-arg~10) node_guard_n32_ok))))))))))))))))
(assert (= node_guard_n32_ok (and (=> ret__int@v@assigned~12 node_32_ok) (=> (not ret__int@v@assigned~12) node_Err_ok))))
(assert (= node_32_ok (and (=> (not (= ret__int@v~11 (_ bv0 32))) node_guard_n31_ok) (=> (= ret__int@v~11 (_ bv0 32)) node_j19_ok))))
(assert (= node_j19_ok (=> (= test@ghost/call-arg~18 test@ghost/call-arg~16) (=> (= PMS/call-arg~18 PMS/call-arg~16) (=> (= test@ghost@assigned~19 test@ghost@assigned~17) (=> (= ret__int@v@assigned~14 ret__int@v@assigned~12) (=> (= ret__char@v~13 ret__char@v~11) (=> (= ret__char@v@assigned~14 ret__char@v@assigned~12) (=> (= HTD/call-arg~18 HTD/call-arg~16) (=> (= ret__int@v~13 ret__int@v~11) (=> (= test@ghost~19 test@ghost~17) (=> (= rv@space@ret__char@v@assigned~14 rv@space@ret__char@v@assigned~12) (=> (= rv@space@ret__char@v~13 rv@space@ret__char@v~11) (=> (= Mem/call-arg~18 Mem/call-arg~16) (=> (= GhostAssertions/call-arg~18 GhostAssertions/call-arg~16) (=> (= ring___ptr_to_struct_ring_buffer_C@v/call-arg~13 ring___ptr_to_struct_ring_buffer_C@v/call-arg~11) node_guard_n27_ok))))))))))))))))
(assert (= node_guard_n31_ok (and (=> HTD@assigned~7 node_31_ok) (=> (not HTD@assigned~7) node_Err_ok))))
(assert (= node_31_ok (and (=> (= (select HTD~7 rx_ring_mux@global-symbol) true) node_guard_n30_ok) (=> (not (= (select HTD~7 rx_ring_mux@global-symbol) true)) node_Err_ok))))
(assert (= node_guard_n30_ok (and (=> (and (and (and (and test@ghost@assigned~17 PMS@assigned~7) HTD@assigned~7) GhostAssertions@assigned~7) Mem@assigned~11) node_call_stash_30_pred_1_ok) (=> (not (and (and (and (and test@ghost@assigned~17 PMS@assigned~7) HTD@assigned~7) GhostAssertions@assigned~7) Mem@assigned~11)) node_Err_ok))))
(assert (= node_call_stash_30_pred_1_ok (=> (= ring___ptr_to_struct_ring_buffer_C@v/call-arg~12 (load-word64 Mem~11 rx_ring_mux@global-symbol)) (=> (= Mem/call-arg~17 Mem~11) (=> (= HTD/call-arg~17 HTD~7) (=> (= PMS/call-arg~17 PMS~7) (=> (= GhostAssertions/call-arg~17 GhostAssertions~7) (=> (= test@ghost/call-arg~17 test@ghost~17) node_call_pre_30_pred_1_ok))))))))
(assert (= node_call_pre_30_pred_1_ok node_30_ok))
(assert (= node_30_ok node_call_post_30_ok))
(assert (= node_call_post_30_ok (=> true node_upd_n30_ok)))
(assert (= node_upd_n30_ok (=> (= rv@space@ret__char@v@assigned~13 (and (and (and (and (and Mem@assigned~11 Mem@assigned~11) HTD@assigned~7) PMS@assigned~7) GhostAssertions@assigned~7) test@ghost@assigned~17)) (=> (= test@ghost@assigned~18 (and (and (and (and (and Mem@assigned~11 Mem@assigned~11) HTD@assigned~7) PMS@assigned~7) GhostAssertions@assigned~7) test@ghost@assigned~17)) node_guard_n29_ok))))
(assert (= node_guard_n29_ok (and (=> rv@space@ret__char@v@assigned~13 node_29_ok) (=> (not rv@space@ret__char@v@assigned~13) node_Err_ok))))
(assert (= node_29_ok (=> (= ret__char@v~12 rv@space@ret__char@v~12) node_upd_n29_ok)))
(assert (= node_upd_n29_ok (=> (= ret__char@v@assigned~13 rv@space@ret__char@v@assigned~13) node_guard_n28_ok)))
(assert (= node_guard_n28_ok (and (=> ret__char@v@assigned~13 node_28_ok) (=> (not ret__char@v@assigned~13) node_Err_ok))))
(assert (= node_28_ok (=> (= ret__int@v~12 (ite (not (not (= ret__char@v~12 (_ bv0 8)))) (_ bv1 32) (_ bv0 32))) node_upd_n28_ok)))
(assert (= node_upd_n28_ok (=> (= ret__int@v@assigned~13 ret__char@v@assigned~13) node_j20_ok)))
(assert (= node_j20_ok (=> (= test@ghost/call-arg~18 test@ghost/call-arg~17) (=> (= PMS/call-arg~18 PMS/call-arg~17) (=> (= test@ghost@assigned~19 test@ghost@assigned~18) (=> (= ret__int@v@assigned~14 ret__int@v@assigned~13) (=> (= ret__char@v~13 ret__char@v~12) (=> (= ret__char@v@assigned~14 ret__char@v@assigned~13) (=> (= HTD/call-arg~18 HTD/call-arg~17) (=> (= ret__int@v~13 ret__int@v~12) (=> (= test@ghost~19 test@ghost~18) (=> (= rv@space@ret__char@v@assigned~14 rv@space@ret__char@v@assigned~13) (=> (= rv@space@ret__char@v~13 rv@space@ret__char@v~12) (=> (= Mem/call-arg~18 Mem/call-arg~17) (=> (= GhostAssertions/call-arg~18 GhostAssertions/call-arg~17) (=> (= ring___ptr_to_struct_ring_buffer_C@v/call-arg~13 ring___ptr_to_struct_ring_buffer_C@v/call-arg~12) node_guard_n27_ok))))))))))))))))
(assert (= node_guard_n27_ok (and (=> ret__int@v@assigned~14 node_27_ok) (=> (not ret__int@v@assigned~14) node_Err_ok))))
(assert (= node_27_ok (and (=> (not (= ret__int@v~13 (_ bv0 32))) node_guard_n26_ok) (=> (= ret__int@v~13 (_ bv0 32)) node_j21_ok))))
(assert (= node_j21_ok (=> (= test@ghost/call-arg~20 test@ghost/call-arg~18) (=> (= PMS/call-arg~20 PMS/call-arg~18) (=> (= test@ghost@assigned~21 test@ghost@assigned~19) (=> (= ret__int@v@assigned~16 ret__int@v@assigned~14) (=> (= ret__char@v~15 ret__char@v~13) (=> (= ret__char@v@assigned~16 ret__char@v@assigned~14) (=> (= HTD/call-arg~20 HTD/call-arg~18) (=> (= ret__int@v~15 ret__int@v~13) (=> (= test@ghost~21 test@ghost~19) (=> (= rv@space@ret__char@v@assigned~16 rv@space@ret__char@v@assigned~14) (=> (= rv@space@ret__char@v~15 rv@space@ret__char@v~13) (=> (= Mem/call-arg~20 Mem/call-arg~18) (=> (= GhostAssertions/call-arg~20 GhostAssertions/call-arg~18) (=> (= ring___ptr_to_struct_ring_buffer_C@v/call-arg~15 ring___ptr_to_struct_ring_buffer_C@v/call-arg~13) node_19_ok))))))))))))))))
(assert (= node_guard_n26_ok (and (=> HTD@assigned~7 node_26_ok) (=> (not HTD@assigned~7) node_Err_ok))))
(assert (= node_26_ok (and (=> (= (select HTD~7 rx_ring_cli@global-symbol) true) node_guard_n25_ok) (=> (not (= (select HTD~7 rx_ring_cli@global-symbol) true)) node_Err_ok))))
(assert (= node_guard_n25_ok (and (=> (and (and (and (and test@ghost@assigned~19 PMS@assigned~7) HTD@assigned~7) GhostAssertions@assigned~7) Mem@assigned~11) node_call_stash_25_pred_1_ok) (=> (not (and (and (and (and test@ghost@assigned~19 PMS@assigned~7) HTD@assigned~7) GhostAssertions@assigned~7) Mem@assigned~11)) node_Err_ok))))
(assert (= node_call_stash_25_pred_1_ok (=> (= ring___ptr_to_struct_ring_buffer_C@v/call-arg~14 (load-word64 Mem~11 (bvadd rx_ring_cli@global-symbol (_ bv8 64)))) (=> (= Mem/call-arg~19 Mem~11) (=> (= HTD/call-arg~19 HTD~7) (=> (= PMS/call-arg~19 PMS~7) (=> (= GhostAssertions/call-arg~19 GhostAssertions~7) (=> (= test@ghost/call-arg~19 test@ghost~19) node_call_pre_25_pred_1_ok))))))))
(assert (= node_call_pre_25_pred_1_ok node_25_ok))
(assert (= node_25_ok node_call_post_25_ok))
(assert (= node_call_post_25_ok (=> true node_upd_n25_ok)))
(assert (= node_upd_n25_ok (=> (= rv@space@ret__char@v@assigned~15 (and (and (and (and (and Mem@assigned~11 Mem@assigned~11) HTD@assigned~7) PMS@assigned~7) GhostAssertions@assigned~7) test@ghost@assigned~19)) (=> (= test@ghost@assigned~20 (and (and (and (and (and Mem@assigned~11 Mem@assigned~11) HTD@assigned~7) PMS@assigned~7) GhostAssertions@assigned~7) test@ghost@assigned~19)) node_guard_n24_ok))))
(assert (= node_guard_n24_ok (and (=> rv@space@ret__char@v@assigned~15 node_24_ok) (=> (not rv@space@ret__char@v@assigned~15) node_Err_ok))))
(assert (= node_24_ok (=> (= ret__char@v~14 rv@space@ret__char@v~14) node_upd_n24_ok)))
(assert (= node_upd_n24_ok (=> (= ret__char@v@assigned~15 rv@space@ret__char@v@assigned~15) node_guard_n23_ok)))
(assert (= node_guard_n23_ok (and (=> ret__char@v@assigned~15 node_23_ok) (=> (not ret__char@v@assigned~15) node_Err_ok))))
(assert (= node_23_ok (=> (= ret__int@v~14 (ite (not (not (= ret__char@v~14 (_ bv0 8)))) (_ bv1 32) (_ bv0 32))) node_upd_n23_ok)))
(assert (= node_upd_n23_ok (=> (= ret__int@v@assigned~15 ret__char@v@assigned~15) node_j22_ok)))
(assert (= node_j22_ok (=> (= test@ghost/call-arg~20 test@ghost/call-arg~19) (=> (= PMS/call-arg~20 PMS/call-arg~19) (=> (= test@ghost@assigned~21 test@ghost@assigned~20) (=> (= ret__int@v@assigned~16 ret__int@v@assigned~15) (=> (= ret__char@v~15 ret__char@v~14) (=> (= ret__char@v@assigned~16 ret__char@v@assigned~15) (=> (= HTD/call-arg~20 HTD/call-arg~19) (=> (= ret__int@v~15 ret__int@v~14) (=> (= test@ghost~21 test@ghost~20) (=> (= rv@space@ret__char@v@assigned~16 rv@space@ret__char@v@assigned~15) (=> (= rv@space@ret__char@v~15 rv@space@ret__char@v~14) (=> (= Mem/call-arg~20 Mem/call-arg~19) (=> (= GhostAssertions/call-arg~20 GhostAssertions/call-arg~19) (=> (= ring___ptr_to_struct_ring_buffer_C@v/call-arg~15 ring___ptr_to_struct_ring_buffer_C@v/call-arg~14) node_19_ok))))))))))))))))
(assert (= node_19_ok (=> (= loop@19@count~3 (bvadd loop@19@count~2 (_ bv1 64))) node_loop_20_latch_2_ok)))
(assert (= node_loop_20_latch_2_ok (=> (not (and ret__int@v@assigned~16 enqueued___unsigned_longlong@v@assigned~4 Mem@assigned~11 HTD@assigned~7 PMS@assigned~7 GhostAssertions@assigned~7 test@ghost@assigned~21)) node_Err_ok)))
(check-sat)
(assert (not node_97_ok))
(check-sat)

